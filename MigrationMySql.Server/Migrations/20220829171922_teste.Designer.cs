// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MigrationMySql.Server;

#nullable disable

namespace MigrationMySql.Server.Migrations
{
    [DbContext(typeof(netdoctorContext))]
    [Migration("20220829171922_teste")]
    partial class teste
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MigrationMySql.Server._874Medicamento", b =>
                {
                    b.Property<string>("Col001")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col002")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col003")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col004")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col005")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col006")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col007")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col008")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col009")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col010")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col011")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col012")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col013")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col014")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col015")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col016")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToTable("874_medicamentos", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server._874MedicamentosPf", b =>
                {
                    b.Property<string>("Col001")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col002")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col003")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col004")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col005")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col006")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col007")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col008")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col009")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col010")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col011")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col012")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col013")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col014")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col015")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col016")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToTable("874_medicamentos_PF", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server._874MedicamentosRh", b =>
                {
                    b.Property<string>("Col001")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col002")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col003")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col004")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col005")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col006")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col007")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col008")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col009")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col010")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col011")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col012")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col013")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col014")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col015")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col016")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToTable("874_medicamentos_RH", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Abaapre", b =>
                {
                    b.Property<string>("AprCodi")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("APR_CODI");

                    b.Property<string>("AprDesc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("APR_DESC");

                    b.Property<bool>("AprFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("APR_FLAG");

                    b.Property<double?>("AprIpi")
                        .HasColumnType("double")
                        .HasColumnName("APR_IPI");

                    b.Property<double?>("AprQtde")
                        .HasColumnType("double")
                        .HasColumnName("APR_QTDE");

                    b.ToTable("ABAAPRE", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Abamedi", b =>
                {
                    b.Property<string>("MedCodi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("MED_CODI");

                    b.Property<string>("MedDesc")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("MED_DESC");

                    b.Property<bool>("MedFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("MED_FLAG");

                    b.Property<bool>("MedSolu")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("MED_SOLU");

                    b.ToTable("ABAMEDI", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Abaprec", b =>
                {
                    b.Property<string>("PreApre")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("PRE_APRE");

                    b.Property<DateTime?>("PreData")
                        .HasColumnType("datetime")
                        .HasColumnName("PRE_DATA");

                    b.Property<double?>("PreEdis")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EDIS");

                    b.Property<double?>("PreEx1")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX1");

                    b.Property<decimal?>("PreEx2")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PRE_EX2");

                    b.Property<double?>("PreEx3")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX3");

                    b.Property<double?>("PreEx4")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX4");

                    b.Property<double?>("PreEx5")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX5");

                    b.Property<double?>("PreEx6")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX6");

                    b.Property<string>("PreExce")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PRE_EXCE");

                    b.Property<bool>("PreFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("PRE_FLAG");

                    b.Property<string>("PreGene")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PRE_GENE");

                    b.Property<double?>("PreIpi")
                        .HasColumnType("double")
                        .HasColumnName("PRE_IPI");

                    b.Property<string>("PreLabo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("PRE_LABO");

                    b.Property<string>("PreMedi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("PRE_MEDI");

                    b.Property<string>("PrePort")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PRE_PORT");

                    b.Property<double?>("PrePrec")
                        .HasColumnType("double")
                        .HasColumnName("PRE_PREC");

                    b.Property<double?>("PreRev1")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV1");

                    b.Property<double?>("PreRev2")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV2");

                    b.Property<double?>("PreRev3")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV3");

                    b.Property<double?>("PreRev4")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV4");

                    b.Property<double?>("PreRev5")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV5");

                    b.Property<double?>("PreRev6")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV6");

                    b.Property<string>("PreTipo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("PRE_TIPO");

                    b.ToTable("ABAPREC", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Abaprem", b =>
                {
                    b.Property<string>("PreApre")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("PRE_APRE");

                    b.Property<DateTime?>("PreData")
                        .HasColumnType("datetime")
                        .HasColumnName("PRE_DATA");

                    b.Property<double?>("PreEdis")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EDIS");

                    b.Property<double?>("PreEx1")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX1");

                    b.Property<double?>("PreEx2")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX2");

                    b.Property<double?>("PreEx3")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX3");

                    b.Property<double?>("PreEx4")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX4");

                    b.Property<double?>("PreEx5")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX5");

                    b.Property<double?>("PreEx6")
                        .HasColumnType("double")
                        .HasColumnName("PRE_EX6");

                    b.Property<string>("PreExce")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PRE_EXCE");

                    b.Property<bool>("PreFlag")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("PRE_FLAG");

                    b.Property<string>("PreGene")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PRE_GENE");

                    b.Property<double?>("PreIpi")
                        .HasColumnType("double")
                        .HasColumnName("PRE_IPI");

                    b.Property<string>("PreLabo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("PRE_LABO");

                    b.Property<string>("PreMedi")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("PRE_MEDI");

                    b.Property<string>("PrePort")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PRE_PORT");

                    b.Property<double?>("PrePrec")
                        .HasColumnType("double")
                        .HasColumnName("PRE_PREC");

                    b.Property<double?>("PreRev1")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV1");

                    b.Property<double?>("PreRev2")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV2");

                    b.Property<double?>("PreRev3")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV3");

                    b.Property<double?>("PreRev4")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV4");

                    b.Property<double?>("PreRev5")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV5");

                    b.Property<double?>("PreRev6")
                        .HasColumnType("double")
                        .HasColumnName("PRE_REV6");

                    b.Property<string>("PreTipo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("PRE_TIPO");

                    b.ToTable("ABAPREM", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.AjusteEstoque", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoValidacao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataFinalizacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Validado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Codigo")
                        .HasName("PK__AjusteEs__06370DAD0969FB88");

                    b.HasIndex(new[] { "DataFinalizacao" }, "I_AjusteEstoque_DataFinalizacao");

                    b.ToTable("AjusteEstoque", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.AjusteEstoqueIten", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AjusteEstoqueCodigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAjuste")
                        .HasColumnType("datetime");

                    b.Property<string>("Lote")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TipoAjuste")
                        .IsRequired()
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)");

                    b.Property<int>("Usuario")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ValorAlterado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ValorAnterior")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Codigo")
                        .HasName("PK__AjusteEs__06370DAD1FCF8646");

                    b.HasIndex("AjusteEstoqueCodigo");

                    b.HasIndex(new[] { "DataAjuste" }, "I_AjusteEstoque_DataCricao");

                    b.ToTable("AjusteEstoqueItens");
                });

            modelBuilder.Entity("MigrationMySql.Server.AnaDin", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToTable("AnaDin", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.AnamneseMastologium", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Abortos")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Acne")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Amamentacoes")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("AntecePesEciru")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AntecePesECiru");

                    b.Property<string>("ApUrinario")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cesareas")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Ciclos")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Dismenorreia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ExameGineco")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ExameMamaDir")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ExameMamaEsq")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Gestacoes")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Hirsutismo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MedicamentosUso")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Menarca")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Obesidade")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<float?>("Paciente")
                        .HasColumnType("float(10, 2)");

                    b.Property<string>("Para")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PartosNormais")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Peso")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("PressaoArterial")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Procedencia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Profissional")
                        .HasColumnType("int");

                    b.Property<string>("QueixasPrincipais")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Tempo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UltimaMenstruacao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UltimoParto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Codigo")
                        .HasName("pk_AnamneseMastologia");

                    b.HasIndex("Profissional");

                    b.ToTable("AnamneseMastologia");
                });

            modelBuilder.Entity("MigrationMySql.Server.Atualizacao", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("Datafim")
                        .HasColumnType("datetime")
                        .HasColumnName("datafim");

                    b.Property<DateTime?>("Dataini")
                        .HasColumnType("datetime")
                        .HasColumnName("dataini");

                    b.Property<int?>("Segundos")
                        .HasColumnType("int")
                        .HasColumnName("segundos");

                    b.Property<string>("Unidade")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidade");

                    b.ToTable("atualizacao", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Cadmed", b =>
                {
                    b.Property<int?>("CobrAnestVl")
                        .HasColumnType("int")
                        .HasColumnName("COBR ANEST VL");

                    b.Property<string>("CodMed")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD MED");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int?>("Crm")
                        .HasColumnType("int")
                        .HasColumnName("CRM");

                    b.Property<float?>("DescPartic")
                        .HasColumnType("float")
                        .HasColumnName("DESC PARTIC");

                    b.Property<decimal?>("DescProd")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("desc_prod");

                    b.Property<float?>("Desconto")
                        .HasColumnType("float")
                        .HasColumnName("DESCONTO");

                    b.Property<string>("End")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("END");

                    b.Property<int?>("FatorRelat")
                        .HasColumnType("int")
                        .HasColumnName("FATOR RELAT");

                    b.Property<string>("FoneCel")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FONE (CEL)");

                    b.Property<string>("FoneRes")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FONE(RES)");

                    b.Property<float?>("ImpUnimedxxx")
                        .HasColumnType("float")
                        .HasColumnName("IMP UNIMEDXXX");

                    b.Property<float?>("LioAux")
                        .HasColumnType("float")
                        .HasColumnName("LIO AUX");

                    b.Property<string>("Medic")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MEDIC");

                    b.Property<string>("MédRelatUnimed")
                        .HasColumnType("longtext")
                        .HasColumnName("MÉD RELAT UNIMED");

                    b.Property<string>("Médico")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MÉDICO");

                    b.Property<string>("NumUnim")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUM UNIM");

                    b.Property<float?>("PgLio")
                        .HasColumnType("float")
                        .HasColumnName("PG LIO");

                    b.Property<string>("SiglaMed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SIGLA MED");

                    b.ToTable("CADMED", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Description")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("blob");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MigrationMySql.Server.CcCliente", b =>
                {
                    b.Property<int?>("Atualiza")
                        .HasColumnType("int")
                        .HasColumnName("atualiza");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<decimal?>("Conta")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("conta");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<int?>("Forma")
                        .HasColumnType("int")
                        .HasColumnName("forma");

                    b.Property<string>("Observacao")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("observacao");

                    b.Property<string>("Operador")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("operador");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("valor");

                    b.ToTable("cc_clientes", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Cid10", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool?>("Flativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("flativo");

                    b.HasIndex(new[] { "Codigo" }, "i_cid10");

                    b.ToTable("cid10", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Consult", b =>
                {
                    b.Property<string>("Cat")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("CAT");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA");

                    b.Property<string>("Fone")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("FONE");

                    b.Property<string>("Hora")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("HORA");

                    b.Property<string>("Nome")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOME");

                    b.ToTable("CONSULT", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Contratado", b =>
                {
                    b.Property<string>("Cnes")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cnes");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Codigonoconvenio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigonoconvenio");

                    b.Property<int?>("Convenio")
                        .HasColumnType("int")
                        .HasColumnName("convenio");

                    b.Property<int?>("Faturaclinica")
                        .HasColumnType("int")
                        .HasColumnName("faturaclinica");

                    b.Property<int?>("Flinterno")
                        .HasColumnType("int")
                        .HasColumnName("flinterno");

                    b.Property<string>("Nome")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Unidade")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("unidade");

                    b.HasIndex(new[] { "Convenio" }, "convcontra");

                    b.ToTable("contratados", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ControleConsultorio", b =>
                {
                    b.Property<string>("Anestesista")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ANESTESISTA");

                    b.Property<string>("Autoriz")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AUTORIZ");

                    b.Property<string>("CodJustif")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD JUSTIF");

                    b.Property<string>("CodUsuDep")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("COD USU DEP");

                    b.Property<string>("CodUsuDig")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("COD USU DIG");

                    b.Property<string>("Convenio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("CódProced")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CÓD PROCED");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA");

                    b.Property<DateTime?>("DataLançam")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA LANÇAM");

                    b.Property<string>("DataUnimed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DATA UNIMED");

                    b.Property<DateTime?>("DtAutoriz")
                        .HasColumnType("datetime")
                        .HasColumnName("DT AUTORIZ");

                    b.Property<string>("DtEmissGuia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DT EMISS GUIA");

                    b.Property<string>("FormaPgto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("FORMA PGTO");

                    b.Property<string>("GuiaPrincipal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GUIA PRINCIPAL");

                    b.Property<float?>("Idade")
                        .HasColumnType("float")
                        .HasColumnName("IDADE");

                    b.Property<string>("Interc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("INTERC");

                    b.Property<string>("Lote")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LOTE");

                    b.Property<string>("Matricula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MATRICULA");

                    b.Property<string>("Mes")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("MES");

                    b.Property<string>("MédSolicitante")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("MÉD SOLICITANTE");

                    b.Property<string>("NGuia")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("N GUIA");

                    b.Property<string>("NRec")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("N_REC");

                    b.Property<string>("NTitular")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("N TITULAR");

                    b.Property<string>("Num")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NUM");

                    b.Property<string>("Obs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OBS:");

                    b.Property<string>("Olho")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OLHO");

                    b.Property<string>("Paciente")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("PACIENTE");

                    b.Property<string>("Plano")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PLANO");

                    b.Property<int?>("Qtde")
                        .HasColumnType("int")
                        .HasColumnName("QTDE");

                    b.Property<float?>("QtdeUco")
                        .HasColumnType("float")
                        .HasColumnName("QTDE UCO");

                    b.Property<string>("SiglaMéd")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SIGLA MÉD");

                    b.Property<string>("SiglaProced")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SIGLA PROCED");

                    b.Property<string>("UnimPac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UNIM PAC");

                    b.Property<float?>("UnimedFilme")
                        .HasColumnType("float")
                        .HasColumnName("UNIMED FILME");

                    b.Property<float?>("UnimedMat")
                        .HasColumnType("float")
                        .HasColumnName("UNIMED MAT");

                    b.Property<string>("ValidCart")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VALID CART");

                    b.Property<float?>("ValorAnest")
                        .HasColumnType("float")
                        .HasColumnName("VALOR ANEST");

                    b.Property<float?>("ValorPt")
                        .HasColumnType("float")
                        .HasColumnName("VALOR PT");

                    b.ToTable("CONTROLE CONSULTORIO", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ControleInterface", b =>
                {
                    b.Property<string>("PEntrada")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("P_Entrada");

                    b.Property<string>("PSaida")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("P_Saida");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<DateTime?>("TAtua")
                        .HasColumnType("datetime")
                        .HasColumnName("T_Atua");

                    b.ToTable("Controle_Interface", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Convenio", b =>
                {
                    b.Property<int?>("Apart")
                        .HasColumnType("int");

                    b.Property<string>("Arredonda")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ARREDONDA");

                    b.Property<string>("Bairro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CIDADE");

                    b.Property<int?>("CirBiLat")
                        .HasColumnType("int");

                    b.Property<int?>("CirDif")
                        .HasColumnType("int");

                    b.Property<int?>("CirMesma")
                        .HasColumnType("int");

                    b.Property<int?>("Clinico")
                        .HasColumnType("int");

                    b.Property<string>("Codesm")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codesm");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("CODIGO");

                    b.Property<int?>("CodigoTerceiro")
                        .HasColumnType("int")
                        .HasColumnName("codigoTerceiro");

                    b.Property<string>("Contato")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CONTATO");

                    b.Property<string>("Cpf")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CPF");

                    b.Property<int?>("Dhe")
                        .HasColumnType("int")
                        .HasColumnName("DHE");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ESTADO");

                    b.Property<bool?>("FlCompmatricula")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("fl_compmatricula");

                    b.Property<string>("Indice")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE");

                    b.Property<int?>("Medico")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOME");

                    b.Property<string>("Obs")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("OBS");

                    b.Property<decimal?>("Percentual")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("PERCENTUAL");

                    b.Property<string>("Razaosocial")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RAZAOSOCIAL");

                    b.Property<string>("Tabela")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA");

                    b.Property<decimal?>("TaxaImposto")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("taxaImposto");

                    b.Property<string>("Telefone")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TELEFONE");

                    b.Property<int?>("Urgen")
                        .HasColumnType("int");

                    b.Property<decimal?>("Vias")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("VIAS");

                    b.HasIndex(new[] { "Codigo" }, "codconv");

                    b.ToTable("convenios", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ConveniosCompleto", b =>
                {
                    b.Property<string>("Bairro")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("BAIRRO");

                    b.Property<double?>("Cep")
                        .HasColumnType("double")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Complemento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<double?>("Ddd")
                        .HasColumnType("double")
                        .HasColumnName("DDD");

                    b.Property<string>("EndereçoEletrônico")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ENDEREÇO ELETRÔNICO");

                    b.Property<double?>("Fax")
                        .HasColumnType("double")
                        .HasColumnName("FAX");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("Nome")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("NomeFantasia")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NOME FANTASIA");

                    b.Property<string>("NºRegistroAns")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Nº REGISTRO ANS");

                    b.Property<double?>("Número")
                        .HasColumnType("double")
                        .HasColumnName("NÚMERO");

                    b.Property<string>("RazãoSocial")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RAZÃO SOCIAL");

                    b.Property<double?>("Telefone")
                        .HasColumnType("double")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Uf")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("UF");

                    b.ToTable("convenios_completo", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ConveniosFaturado", b =>
                {
                    b.Property<int?>("Apart")
                        .HasColumnType("int");

                    b.Property<string>("Arredonda")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ARREDONDA");

                    b.Property<string>("Bairro")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CIDADE");

                    b.Property<int?>("CirBiLat")
                        .HasColumnType("int");

                    b.Property<int?>("CirDif")
                        .HasColumnType("int");

                    b.Property<int?>("CirMesma")
                        .HasColumnType("int");

                    b.Property<int?>("Clinico")
                        .HasColumnType("int");

                    b.Property<string>("Codesm")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codesm");

                    b.Property<string>("Codesm2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codesm2");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Contato")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CONTATO");

                    b.Property<string>("Cpf")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("CPF");

                    b.Property<int?>("Dhe")
                        .HasColumnType("int")
                        .HasColumnName("DHE");

                    b.Property<string>("Endereco")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Indice")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE");

                    b.Property<int?>("Medico")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOME");

                    b.Property<decimal?>("Percentual")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("PERCENTUAL");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("numeric(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Tabela")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE");

                    b.Property<int?>("Urgen")
                        .HasColumnType("int");

                    b.Property<decimal?>("Vias")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("VIAS");

                    b.ToTable("convenios_faturados", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ConveniosUltimo", b =>
                {
                    b.Property<int?>("Apart")
                        .HasColumnType("int");

                    b.Property<string>("Arredonda")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ARREDONDA");

                    b.Property<string>("Bairro")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CIDADE");

                    b.Property<int?>("CirBiLat")
                        .HasColumnType("int");

                    b.Property<int?>("CirDif")
                        .HasColumnType("int");

                    b.Property<int?>("CirMesma")
                        .HasColumnType("int");

                    b.Property<int?>("Clinico")
                        .HasColumnType("int");

                    b.Property<string>("Codesm")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codesm");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Contato")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CONTATO");

                    b.Property<string>("Cpf")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("CPF");

                    b.Property<int?>("Dhe")
                        .HasColumnType("int")
                        .HasColumnName("DHE");

                    b.Property<string>("Endereco")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ESTADO");

                    b.Property<string>("Indice")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE");

                    b.Property<int?>("Medico")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOME");

                    b.Property<decimal?>("Percentual")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("PERCENTUAL");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("numeric(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Tabela")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE");

                    b.Property<int?>("Urgen")
                        .HasColumnType("int");

                    b.Property<decimal?>("Vias")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("VIAS");

                    b.ToTable("convenios_ultimo", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ConvExtra", b =>
                {
                    b.Property<string>("C03s")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("C03S");

                    b.Property<string>("Cnes")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cnes");

                    b.Property<int>("Cod")
                        .HasColumnType("int")
                        .HasColumnName("cod");

                    b.Property<int?>("CodMat")
                        .HasColumnType("int")
                        .HasColumnName("cod_mat");

                    b.Property<int?>("CodMed")
                        .HasColumnType("int")
                        .HasColumnName("cod_med");

                    b.Property<int?>("Contasfatura")
                        .HasColumnType("int")
                        .HasColumnName("contasfatura");

                    b.Property<decimal>("Convenio")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<decimal?>("DiasRetorno")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("DIAS_RETORNO");

                    b.Property<int?>("FlTotmatmed")
                        .HasColumnType("int")
                        .HasColumnName("fl_totmatmed");

                    b.Property<decimal?>("Honorarios1")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("honorarios1");

                    b.Property<decimal?>("Honorarios2")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("honorarios2");

                    b.Property<decimal?>("HorarioF")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("HORARIO_F");

                    b.Property<decimal?>("HorarioI")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("HORARIO_I");

                    b.Property<string>("HrEmFim")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("HrEmIni")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Indice1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE1");

                    b.Property<string>("Indice2")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE2");

                    b.Property<string>("Indice3")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE3");

                    b.Property<string>("Indice4")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE4");

                    b.Property<decimal?>("IndiceF")
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("INDICE_F");

                    b.Property<decimal?>("IndiceP")
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("INDICE_P");

                    b.Property<decimal?>("IndiceS")
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("INDICE_S");

                    b.Property<string>("Matmed1")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nomeplano")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomeplano");

                    b.Property<string>("Planilha")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PLANILHA");

                    b.Property<string>("Programa")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("PROGRAMA");

                    b.Property<int?>("Recnum")
                        .HasColumnType("int")
                        .HasColumnName("recnum");

                    b.Property<string>("RegAns")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName("reg_ans")
                        .IsFixedLength();

                    b.Property<string>("Situacao")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SITUACAO");

                    b.Property<string>("Tabela1")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TABELA1");

                    b.Property<string>("Tabela2")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TABELA2");

                    b.Property<string>("Tabela3")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA3");

                    b.Property<string>("Tabela4")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA4");

                    b.Property<string>("Urgencia")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("URGENCIA");

                    b.HasIndex(new[] { "Convenio" }, "I_convenio_ce");

                    b.HasIndex(new[] { "Convenio" }, "ce_convenio");

                    b.HasIndex(new[] { "Convenio" }, "codconvextra");

                    b.ToTable("Conv_Extra", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ConvExtraFaturado", b =>
                {
                    b.Property<string>("C03s")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("C03S");

                    b.Property<decimal>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<decimal?>("DiasRetorno")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("DIAS_RETORNO");

                    b.Property<decimal?>("HorarioF")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("HORARIO_F");

                    b.Property<decimal?>("HorarioI")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("HORARIO_I");

                    b.Property<string>("HrEmFim")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("HrEmIni")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Indice1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE1");

                    b.Property<string>("Indice2")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE2");

                    b.Property<string>("Indice3")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE3");

                    b.Property<string>("Indice4")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE4");

                    b.Property<decimal?>("IndiceF")
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("INDICE_F");

                    b.Property<decimal?>("IndiceP")
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("INDICE_P");

                    b.Property<decimal?>("IndiceS")
                        .HasColumnType("decimal(10,4)")
                        .HasColumnName("INDICE_S");

                    b.Property<string>("Matmed1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Planilha")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PLANILHA");

                    b.Property<string>("Programa")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("PROGRAMA");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Situacao")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SITUACAO");

                    b.Property<string>("Tabela1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA1");

                    b.Property<string>("Tabela2")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA2");

                    b.Property<string>("Tabela3")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA3");

                    b.Property<string>("Tabela4")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA4");

                    b.ToTable("conv_extra_faturados", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ConvExtraUltimo", b =>
                {
                    b.Property<string>("C03s")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("C03S");

                    b.Property<decimal>("Convenio")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<decimal?>("DiasRetorno")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("DIAS_RETORNO");

                    b.Property<decimal?>("HorarioF")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("HORARIO_F");

                    b.Property<decimal?>("HorarioI")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("HORARIO_I");

                    b.Property<string>("HrEmFim")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("HrEmIni")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Indice1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE1");

                    b.Property<string>("Indice2")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE2");

                    b.Property<string>("Indice3")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE3");

                    b.Property<string>("Indice4")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE4");

                    b.Property<decimal?>("IndiceF")
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("INDICE_F");

                    b.Property<decimal?>("IndiceP")
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("INDICE_P");

                    b.Property<decimal?>("IndiceS")
                        .HasColumnType("numeric(10,4)")
                        .HasColumnName("INDICE_S");

                    b.Property<string>("Matmed1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Planilha")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PLANILHA");

                    b.Property<string>("Programa")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("PROGRAMA");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("numeric(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Situacao")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SITUACAO");

                    b.Property<string>("Tabela1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA1");

                    b.Property<string>("Tabela2")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA2");

                    b.Property<string>("Tabela3")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA3");

                    b.Property<string>("Tabela4")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA4");

                    b.Property<string>("Urgencia")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("URGENCIA");

                    b.ToTable("conv_extra_ultimo", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Customer", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CustomerID");

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MigrationMySql.Server.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Extension")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Notes")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("blob");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("ReportsTo")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("TitleOfCourtesy")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MigrationMySql.Server.Encaminhamento", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Destino")
                        .HasColumnType("longtext");

                    b.Property<int?>("Medico")
                        .HasColumnType("int");

                    b.Property<int?>("Paciente")
                        .HasColumnType("int");

                    b.ToTable("Encaminhamento", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.EntradaESaidum", b =>
                {
                    b.Property<string>("Cod")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("cod")
                        .IsFixedLength();

                    b.Property<string>("Senha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("senha");

                    b.ToTable("entrada_e_saida", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ExamesBloqueado", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Exame")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("exame");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.ToTable("exames_bloqueados", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Faturamento", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal?>("Cobrado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Convenio")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataNf")
                        .HasColumnType("datetime")
                        .HasColumnName("DataNF");

                    b.Property<DateTime?>("DataPg")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Dtcobranca")
                        .HasColumnType("datetime")
                        .HasColumnName("dtcobranca");

                    b.Property<int?>("Fatura")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Glosado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Mesref")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("mesref");

                    b.Property<string>("Nf")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nf");

                    b.Property<string>("Obs")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("obs");

                    b.Property<decimal?>("Pago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorRecursado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorRecursadoPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Vencimento")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Vlimpostos")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("vlimpostos");

                    b.HasKey("Codigo");

                    b.ToTable("Faturamento", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.FaturamentoPaga", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int>("CodigoFatura")
                        .HasColumnType("int")
                        .HasColumnName("codigo_fatura");

                    b.Property<DateTime?>("DataNota")
                        .HasColumnType("datetime")
                        .HasColumnName("data_nota");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime")
                        .HasColumnName("data_pagamento");

                    b.Property<int?>("NumeroNota")
                        .HasColumnType("int")
                        .HasColumnName("numero_nota");

                    b.Property<string>("Observacao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("observacao");

                    b.Property<decimal?>("ValorGlosa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_glosa");

                    b.Property<decimal?>("ValorImposto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_imposto");

                    b.Property<decimal?>("ValorPagamento")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor_pagamento");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoFatura");

                    b.ToTable("FaturamentoPaga", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Feriado", b =>
                {
                    b.Property<string>("Data")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descrição")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Dia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("Feriados");
                });

            modelBuilder.Entity("MigrationMySql.Server.Forma", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descricao");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("formas", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Grade", b =>
                {
                    b.Property<bool>("Cabfixo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("CABFIXO");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Grade1")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("GRADE");

                    b.Property<string>("ImpGrade")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IMP_GRADE");

                    b.Property<string>("Nome")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NOME");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Setor")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("SETOR");

                    b.Property<double?>("Tamcols")
                        .HasColumnType("double")
                        .HasColumnName("TAMCOLS");

                    b.Property<double?>("Tamtotal")
                        .HasColumnType("double")
                        .HasColumnName("TAMTOTAL");

                    b.ToTable("GRADE", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Gradecol", b =>
                {
                    b.Property<int?>("Codgrade")
                        .HasColumnType("int")
                        .HasColumnName("CODGRADE");

                    b.Property<string>("Exame")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("EXAME");

                    b.Property<string>("Grade")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("GRADE");

                    b.Property<double?>("Ordem")
                        .HasColumnType("double")
                        .HasColumnName("ORDEM");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<double?>("Tamanho")
                        .HasColumnType("double")
                        .HasColumnName("TAMANHO");

                    b.ToTable("GRADECOL", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Gradesel", b =>
                {
                    b.Property<string>("Estacao")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ESTACAO");

                    b.Property<string>("Grade")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("GRADE");

                    b.Property<bool>("Imprime")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IMPRIME");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("GRADESEL", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.GrupoExame", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<int?>("Setor")
                        .HasColumnType("int")
                        .HasColumnName("setor");

                    b.ToTable("grupo_exame", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.GrupoMapa", b =>
                {
                    b.Property<string>("Apelido")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("APELIDO");

                    b.Property<string>("Codigo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Cor01")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)")
                        .HasColumnName("COR01");

                    b.Property<string>("Cor02")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("COR02");

                    b.Property<string>("Grupo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("GRUPO");

                    b.Property<string>("ImpEtqd")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IMP_ETQD");

                    b.Property<string>("ImpExm")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IMP_EXM");

                    b.Property<string>("ImpGab")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IMP_GAB");

                    b.Property<string>("ImpSpc")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IMP_SPC");

                    b.Property<string>("ImpUrg")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IMP_URG");

                    b.Property<string>("ImpressN")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("IMPRESS_N");

                    b.Property<string>("ImpressU")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("IMPRESS_U");

                    b.Property<string>("MedRealiz")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("MED_REALIZ");

                    b.Property<double?>("Porcent")
                        .HasColumnType("double")
                        .HasColumnName("PORCENT");

                    b.Property<double?>("Rotina1")
                        .HasColumnType("double")
                        .HasColumnName("ROTINA1");

                    b.Property<double?>("Rotina2")
                        .HasColumnType("double")
                        .HasColumnName("ROTINA2");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("SaidaN")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("SAIDA_N");

                    b.Property<string>("SaidaU")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("SAIDA_U");

                    b.Property<string>("Setor01")
                        .HasMaxLength(130)
                        .IsUnicode(false)
                        .HasColumnType("varchar(130)")
                        .HasColumnName("SETOR01");

                    b.Property<string>("Setor02")
                        .HasMaxLength(130)
                        .IsUnicode(false)
                        .HasColumnType("varchar(130)")
                        .HasColumnName("SETOR02");

                    b.Property<string>("Setor03")
                        .HasMaxLength(130)
                        .IsUnicode(false)
                        .HasColumnType("varchar(130)")
                        .HasColumnName("SETOR03");

                    b.Property<string>("TipoFat")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TIPO_FAT");

                    b.Property<string>("Titan")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TITAN");

                    b.ToTable("grupo_mapa", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.GruposProduto", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("DescricaoGrupo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descricao_grupo");

                    b.HasKey("IdGrupo");

                    b.ToTable("grupos_produtos", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Guardum", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("CODIGO");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA");

                    b.Property<string>("Nome")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("NOME");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Trace")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("TRACE");

                    b.ToTable("GUARDA", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Histdoctors0", b =>
                {
                    b.Property<string>("Atributo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodMedico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodPaciente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DataConsulta")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Historico")
                        .HasMaxLength(5000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("histdoctors0", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Histdoctors2", b =>
                {
                    b.Property<string>("Atributo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodMedico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodPaciente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DataConsulta")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Historico")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("histdoctors2", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Historic", b =>
                {
                    b.Property<string>("Atributo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodMedico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodPaciente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DataConsulta")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Historico")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("HISTORIC", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Kit", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Flag")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Obskit")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("obskit");

                    b.ToTable("Kits");
                });

            modelBuilder.Entity("MigrationMySql.Server.KitsIten", b =>
                {
                    b.Property<decimal>("Iditem")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("iditem");

                    b.Property<int?>("Kit")
                        .HasColumnType("int");

                    b.Property<string>("Obs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("obs");

                    b.Property<int?>("Ordem")
                        .HasColumnType("int")
                        .HasColumnName("ordem");

                    b.Property<int?>("Procedimento")
                        .HasColumnType("int")
                        .HasColumnName("PROCEDIMENTO");

                    b.Property<int?>("Proddilu")
                        .HasColumnType("int")
                        .HasColumnName("proddilu");

                    b.Property<int?>("Produto")
                        .HasColumnType("int")
                        .HasColumnName("PRODUTO");

                    b.Property<int?>("Qtd")
                        .HasColumnType("int");

                    b.Property<int?>("Qtddilu")
                        .HasColumnType("int")
                        .HasColumnName("qtddilu");

                    b.Property<string>("Unid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unid");

                    b.HasIndex(new[] { "Kit" }, "fk_kititem");

                    b.HasIndex(new[] { "Iditem" }, "prod2item");

                    b.HasIndex(new[] { "Produto" }, "proditem");

                    b.ToTable("Kits_Itens", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.KitsProc", b =>
                {
                    b.Property<string>("Cidkit")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cidkit");

                    b.Property<int>("Codkitproc")
                        .HasColumnType("int")
                        .HasColumnName("codkitproc");

                    b.Property<string>("Desckitproc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Histclinkit")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("histclinkit");

                    b.Property<string>("Tabelakit")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tabelakit");

                    b.ToTable("Kits_Proc", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Leito", b =>
                {
                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("NUMERO");

                    b.Property<decimal>("Prontuario")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("PRONTUARIO");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal>("UnidInternacao")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("UNID_INTERNACAO");

                    b.ToTable("Leitos");
                });

            modelBuilder.Entity("MigrationMySql.Server.Listagem", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<decimal?>("CodigoColunas")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("CODIGO_COLUNAS");

                    b.Property<int?>("Codmapa")
                        .HasColumnType("int")
                        .HasColumnName("codmapa");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<string>("Exame")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("exame");

                    b.Property<int?>("Folha")
                        .HasColumnType("int")
                        .HasColumnName("folha");

                    b.Property<bool?>("Impresso")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("impresso");

                    b.Property<int?>("Mapa")
                        .HasColumnType("int")
                        .HasColumnName("mapa");

                    b.Property<decimal?>("Requisicao")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("requisicao");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("listagem", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Log", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<decimal?>("Conta")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("CONTA");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricao");

                    b.Property<DateTime?>("Hora")
                        .HasColumnType("datetime")
                        .HasColumnName("hora");

                    b.Property<string>("Usuario")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("usuario");

                    b.ToTable("log", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.LogBd", b =>
                {
                    b.Property<string>("Bd")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BD");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descricao");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("datetime")
                        .HasColumnName("fim");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("datetime")
                        .HasColumnName("inicio");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.ToTable("logBD", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Login", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("FlLivrocaixa")
                        .HasColumnType("int")
                        .HasColumnName("fl_livrocaixa");

                    b.Property<string>("Grupo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Login1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Login");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RegProfis")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reg_profis");

                    b.Property<string>("Senha")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Siglaconselho")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("siglaconselho");

                    b.Property<int?>("TipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("Tipo_Usuario");

                    b.Property<string>("UfConselho")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("UF_conselho")
                        .IsFixedLength();

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("datetime")
                        .HasColumnName("Ultimo_Acesso");

                    b.HasKey("Codigo");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("MigrationMySql.Server.LogInt", b =>
                {
                    b.Property<decimal?>("Conta")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("CONTA");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descricao");

                    b.Property<DateTime?>("Hora")
                        .HasColumnType("datetime")
                        .HasColumnName("hora");

                    b.ToTable("logINT", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.MalaDiretum", b =>
                {
                    b.Property<string>("Bairro")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CIDADE");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("ComplEnd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("COMPL_END");

                    b.Property<string>("Convenio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("Dtnasc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DTNASC");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Endresp")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("ENDRESP");

                    b.Property<string>("Foneresp")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("FONERESP");

                    b.Property<string>("Mae")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MAE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Ocupacao")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OCUPACAO");

                    b.Property<string>("Pai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PAI");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESPONSAVEL");

                    b.Property<string>("Rg")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("RG");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SEXO");

                    b.Property<string>("Tel1")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tel1");

                    b.Property<string>("Tel2")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tel2");

                    b.Property<string>("Tel3")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tel3");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE");

                    b.Property<int?>("Tipologradouro")
                        .HasColumnType("int")
                        .HasColumnName("tipologradouro");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("UF");

                    b.ToTable("MalaDireta");
                });

            modelBuilder.Entity("MigrationMySql.Server.Mapa", b =>
                {
                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descricao");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("mapas", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Mapaadm", b =>
                {
                    b.Property<string>("Dtcoleta")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dtcoleta");

                    b.Property<string>("Hrcoleta")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("hrcoleta");

                    b.Property<int?>("Idade")
                        .HasColumnType("int")
                        .HasColumnName("idade");

                    b.Property<string>("Nome")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("nome");

                    b.Property<string>("Requisicao")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("requisicao");

                    b.Property<string>("Result1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("result1");

                    b.Property<string>("Result2")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("result2");

                    b.Property<string>("Result3")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("result3");

                    b.Property<string>("Result4")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("result4");

                    b.Property<string>("Result5")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("result5");

                    b.Property<string>("Result6")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("result6");

                    b.ToTable("mapaadm", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.MapaEspec", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("MAPA_ESPEC", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Materiai", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.ToTable("materiais", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Matmed", b =>
                {
                    b.Property<DateTime?>("Alteração")
                        .HasColumnType("datetime");

                    b.Property<string>("Compra")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Código")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("CódigodeBarra")
                        .HasColumnType("double");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Data1")
                        .HasColumnType("datetime");

                    b.Property<string>("Descrição")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Dv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DV");

                    b.Property<string>("Embalagem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Especi")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fabricante")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Fracionar")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("Fração")
                        .HasColumnType("double");

                    b.Property<string>("GrupodeEstoque")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Inclusão")
                        .HasColumnType("datetime");

                    b.Property<string>("MinistériodaSaúde")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nacional")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("NomeComercial")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Origem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("Preço")
                        .HasColumnType("double");

                    b.Property<double?>("Quantidade")
                        .HasColumnType("double");

                    b.Property<double?>("Quantidade1")
                        .HasColumnType("double");

                    b.Property<string>("ReutilizaçãoGenérico")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<double?>("Simpro")
                        .HasColumnType("double");

                    b.Property<string>("Situação")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TabUd")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Unidade")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("Validade")
                        .HasColumnType("datetime");

                    b.ToTable("matmed", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.MatMedUnimed", b =>
                {
                    b.Property<string>("Col001")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col002")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col003")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col004")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col005")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col006")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col007")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToTable("Mat_Med_Unimed", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Matmedunimed1", b =>
                {
                    b.Property<decimal?>("Código")
                        .HasColumnType("numeric(18,0)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeComercial")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("Preço")
                        .HasColumnType("numeric(18,2)");

                    b.ToTable("matmedunimed", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.MedAmbIten", b =>
                {
                    b.Property<decimal?>("CustoUnitario")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("custoUnitario");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("item");

                    b.Property<string>("Operador")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("operador");

                    b.Property<float?>("PrUnit")
                        .HasColumnType("float")
                        .HasColumnName("PR_UNIT");

                    b.Property<int>("Produto")
                        .HasColumnType("int")
                        .HasColumnName("PRODUTO");

                    b.Property<float?>("Qtd")
                        .HasColumnType("float")
                        .HasColumnName("QTD");

                    b.Property<int?>("QtdUtilizada")
                        .HasColumnType("int")
                        .HasColumnName("qtdUtilizada");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<int>("Registro")
                        .HasColumnType("int")
                        .HasColumnName("REGISTRO");

                    b.HasIndex(new[] { "Registro" }, "im_registro");

                    b.HasIndex(new[] { "Produto" }, "mai_convenio");

                    b.ToTable("Med_Amb_Itens", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.MedAmbMestre", b =>
                {
                    b.Property<DateTime>("DtMovim")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_MOVIM");

                    b.Property<int?>("FlInteira")
                        .HasColumnType("int")
                        .HasColumnName("fl_inteira");

                    b.Property<string>("Observacao")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Operador")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("operador");

                    b.Property<decimal>("Posto")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("POSTO");

                    b.Property<decimal>("Prontuario")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("PRONTUARIO");

                    b.Property<decimal?>("QtdItens")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("QTD_ITENS");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("REGISTRO");

                    b.Property<float?>("RegistroP")
                        .HasColumnType("float(10, 2)");

                    b.Property<float?>("Total")
                        .HasColumnType("float(10, 2)");

                    b.Property<decimal?>("TotalPago")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex(new[] { "RegistroP" }, "mam_procedimento");

                    b.HasIndex(new[] { "Prontuario" }, "mam_tabela");

                    b.ToTable("Med_Amb_Mestre", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Medic", b =>
                {
                    b.Property<string>("Col001")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col002")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col003")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col004")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Col005")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.ToTable("MEDIC", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Medico", b =>
                {
                    b.Property<int?>("Campainha")
                        .HasColumnType("int")
                        .HasColumnName("CAMPAINHA");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Crm")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CRM");

                    b.Property<DateTime?>("Hrent1")
                        .HasColumnType("datetime")
                        .HasColumnName("hrent1");

                    b.Property<DateTime?>("Hrent2")
                        .HasColumnType("datetime")
                        .HasColumnName("hrent2");

                    b.Property<DateTime?>("Hrsai1")
                        .HasColumnType("datetime")
                        .HasColumnName("hrsai1");

                    b.Property<DateTime?>("Hrsai2")
                        .HasColumnType("datetime")
                        .HasColumnName("hrsai2");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("MigrationMySql.Server.MedIntIten", b =>
                {
                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("ITEM");

                    b.Property<string>("Operador")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("operador");

                    b.Property<float?>("PrUnit")
                        .HasColumnType("float")
                        .HasColumnName("PR_UNIT");

                    b.Property<int>("Produto")
                        .HasColumnType("int")
                        .HasColumnName("PRODUTO");

                    b.Property<decimal?>("Qtd")
                        .HasColumnType("numeric(9,2)")
                        .HasColumnName("QTD");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<int>("Registro")
                        .HasColumnType("int")
                        .HasColumnName("REGISTRO");

                    b.ToTable("Med_Int_Itens", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.MedIntMestre", b =>
                {
                    b.Property<DateTime>("DtMovim")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_MOVIM");

                    b.Property<int?>("FlInteira")
                        .HasColumnType("int")
                        .HasColumnName("fl_inteira");

                    b.Property<string>("Observacao")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Operador")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("operador");

                    b.Property<decimal?>("Posto")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("POSTO");

                    b.Property<decimal>("Prontuario")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("PRONTUARIO");

                    b.Property<decimal?>("QtdItens")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("QTD_ITENS");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("REGISTRO");

                    b.Property<float?>("RegistroP")
                        .HasColumnType("float(10, 2)");

                    b.Property<string>("Requisicao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<float?>("Total")
                        .HasColumnType("float(10, 2)");

                    b.Property<float?>("TotalPago")
                        .HasColumnType("float(10, 2)");

                    b.HasIndex(new[] { "Prontuario" }, "Med_Int_Mestre2")
                        .HasAnnotation("SqlServer:Clustered", true)
                        .HasAnnotation("SqlServer:FillFactor", 90);

                    b.ToTable("Med_Int_Mestre", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Modificaco", b =>
                {
                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Tabela")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("Modificacoes");
                });

            modelBuilder.Entity("MigrationMySql.Server.Movimentacao", b =>
                {
                    b.Property<int?>("Banco")
                        .HasColumnType("int")
                        .HasColumnName("banco");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.ToTable("movimentacao", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<decimal?>("Freight")
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("RequiredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ShipAddress")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("ShipCity")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ShipCountry")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("ShipName")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ShipPostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ShipRegion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("ShipVia")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MigrationMySql.Server.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<float>("Discount")
                        .HasColumnType("float");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("PK_Order_Details");

                    b.ToTable("Order Details", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Paciente", b =>
                {
                    b.Property<string>("Cep")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodPaciente")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DtNascimento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Endereco")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Estado")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Flimportado")
                        .HasColumnType("int")
                        .HasColumnName("flimportado");

                    b.Property<string>("Fone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FoneAdicional")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Mae")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Naturalidade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Pai")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Sexo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("PACIENTE", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Paciente1", b =>
                {
                    b.Property<float>("CodigoP")
                        .HasColumnType("float(10, 2)");

                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("altura");

                    b.Property<int?>("Atualiza")
                        .HasColumnType("int")
                        .HasColumnName("atualiza");

                    b.Property<string>("Bairro")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CIDADE");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Codigolegado")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("codigolegado");

                    b.Property<string>("ComplEnd")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("COMPL_END");

                    b.Property<string>("Convenio")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("Cpf")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cpf");

                    b.Property<string>("Dtnasc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DTNASC");

                    b.Property<DateTime?>("Dtobito")
                        .HasColumnType("datetime")
                        .HasColumnName("dtobito");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Endresp")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("ENDRESP");

                    b.Property<string>("Fatirdu")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fatirdu");

                    b.Property<string>("Fatordu")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fatordu");

                    b.Property<string>("Fatorrh")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("fatorrh");

                    b.Property<int?>("FlImportado")
                        .HasColumnType("int")
                        .HasColumnName("fl_importado");

                    b.Property<string>("Foneresp")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("FONERESP");

                    b.Property<string>("Gsang")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("gsang");

                    b.Property<string>("Mae")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("MAE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Ocupacao")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("OCUPACAO");

                    b.Property<string>("Pai")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PAI");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("peso");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RESPONSAVEL");

                    b.Property<string>("Rg")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("RG");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SEXO");

                    b.Property<int?>("Statuscarteira")
                        .HasColumnType("int")
                        .HasColumnName("statuscarteira");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telefone2");

                    b.Property<int?>("Tipologradouro")
                        .HasColumnType("int")
                        .HasColumnName("tipologradouro");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("UF");

                    b.Property<int?>("Unidade")
                        .HasColumnType("int")
                        .HasColumnName("UNIDADE");

                    b.HasKey("CodigoP")
                        .HasName("PK__Paciente__86EBD4961BDF3B0D");

                    b.ToTable("Pacientes", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.PacientesConvenio", b =>
                {
                    b.Property<int?>("Atualiza")
                        .HasColumnType("int")
                        .HasColumnName("atualiza");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("Dependencia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DEPENDENCIA");

                    b.Property<string>("Empresa")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EMPRESA");

                    b.Property<string>("Guia")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("GUIA");

                    b.Property<string>("Matricula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MATRICULA");

                    b.Property<int>("Paciente")
                        .HasColumnType("int")
                        .HasColumnName("PACIENTE");

                    b.Property<string>("Pacientenomeplano")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pacientenomeplano");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<string>("Titular")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TITULAR");

                    b.Property<string>("Ultimo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ULTIMO");

                    b.Property<string>("Validade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VALIDADE");

                    b.ToTable("Pacientes_Convenios", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.PacientesExtra", b =>
                {
                    b.Property<string>("Ecivil")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ECIVIL");

                    b.Property<string>("Endresp")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("ENDRESP");

                    b.Property<string>("Mae")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("MAE");

                    b.Property<string>("Nacional")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("NACIONAL");

                    b.Property<string>("Natural")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("NATURAL");

                    b.Property<string>("Observacao")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Ocupacao")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("OCUPACAO");

                    b.Property<int>("Paciente")
                        .HasColumnType("int")
                        .HasColumnName("PACIENTE");

                    b.Property<string>("Pai")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("PAI");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("RESPONSAVEL");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("Pacientes_Extra", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Plan1", b =>
                {
                    b.Property<string>("Autorizacao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AUTORIZACAO");

                    b.Property<double?>("Codigo")
                        .HasColumnType("double")
                        .HasColumnName("CODIGO");

                    b.Property<double?>("Conta")
                        .HasColumnType("double")
                        .HasColumnName("CONTA");

                    b.Property<string>("Convênio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONVÊNIO");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA");

                    b.Property<double?>("Guia")
                        .HasColumnType("double")
                        .HasColumnName("GUIA");

                    b.Property<double?>("Matricula")
                        .HasColumnType("double")
                        .HasColumnName("MATRICULA");

                    b.Property<string>("Paciente")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PACIENTE");

                    b.Property<string>("Plano")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PLANO");

                    b.Property<double?>("Principal")
                        .HasColumnType("double")
                        .HasColumnName("PRINCIPAL");

                    b.Property<string>("Procedimento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PROCEDIMENTO");

                    b.Property<string>("Valor")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALOR");

                    b.ToTable("Plan1$", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Planvisual", b =>
                {
                    b.Property<string>("Autorizacao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("AUTORIZACAO");

                    b.Property<double?>("Codigo")
                        .HasColumnType("double")
                        .HasColumnName("CODIGO");

                    b.Property<double?>("Conta")
                        .HasColumnType("double")
                        .HasColumnName("CONTA");

                    b.Property<string>("Convênio")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CONVÊNIO");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA");

                    b.Property<string>("Guia")
                        .HasMaxLength(53)
                        .IsUnicode(false)
                        .HasColumnType("varchar(53)")
                        .HasColumnName("GUIA");

                    b.Property<string>("Matricula")
                        .HasMaxLength(53)
                        .IsUnicode(false)
                        .HasColumnType("varchar(53)")
                        .HasColumnName("MATRICULA");

                    b.Property<string>("Paciente")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PACIENTE");

                    b.Property<string>("Plano")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PLANO");

                    b.Property<string>("Principal")
                        .HasMaxLength(53)
                        .IsUnicode(false)
                        .HasColumnType("varchar(53)")
                        .HasColumnName("PRINCIPAL");

                    b.Property<string>("Procedimento")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("PROCEDIMENTO");

                    b.Property<string>("Valor")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("VALOR");

                    b.ToTable("planvisual", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Posto", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Endereço")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NomeCompleto")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Padrao")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("Postos");
                });

            modelBuilder.Entity("MigrationMySql.Server.Prescricao", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("altura");

                    b.Property<string>("Ciclo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ciclo");

                    b.Property<float?>("Codigonet")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codigonet");

                    b.Property<int?>("Convenio")
                        .HasColumnType("int")
                        .HasColumnName("convenio");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Datafinal")
                        .HasColumnType("datetime")
                        .HasColumnName("datafinal");

                    b.Property<string>("Descricao")
                        .HasMaxLength(4000)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("descricao");

                    b.Property<string>("Dia")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("dia");

                    b.Property<DateTime?>("Dtexcpres")
                        .HasColumnType("datetime")
                        .HasColumnName("dtexcpres");

                    b.Property<DateTime?>("DtexcpresC")
                        .HasColumnType("datetime")
                        .HasColumnName("dtexcpresC");

                    b.Property<int?>("Medico")
                        .HasColumnType("int")
                        .HasColumnName("medico");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("obs");

                    b.Property<float?>("Paciente")
                        .HasColumnType("float(10, 2)");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("peso");

                    b.Property<int?>("Presfinalizada")
                        .HasColumnType("int")
                        .HasColumnName("presfinalizada");

                    b.Property<string>("Protocolo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("protocolo");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<decimal?>("Supcorp")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("supcorp");

                    b.Property<int?>("Unidadeorigem")
                        .HasColumnType("int")
                        .HasColumnName("unidadeorigem");

                    b.Property<int?>("Usufinal")
                        .HasColumnType("int")
                        .HasColumnName("usufinal");

                    b.HasKey("Codigo")
                        .HasName("PK_prescricao_1");

                    b.HasIndex("Medico");

                    b.HasIndex("Paciente");

                    b.HasIndex("Usufinal");

                    b.HasIndex(new[] { "Codigo" }, "pk_prescricao");

                    b.ToTable("prescricao", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProcAmbIten", b =>
                {
                    b.Property<decimal?>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<decimal>("Item")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("ITEM");

                    b.Property<decimal?>("Percentual")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("PERCENTUAL");

                    b.Property<decimal>("Profissional")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("PROFISSIONAL");

                    b.Property<float>("Recnum")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("RECNUM");

                    b.Property<float>("Registro")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("REGISTRO");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<decimal>("Tipo")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("TIPO");

                    b.Property<decimal?>("VlUnit")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("VL_UNIT");

                    b.HasIndex(new[] { "Convenio" }, "I_convenio_pi");

                    b.HasIndex(new[] { "Registro" }, "i_registro");

                    b.HasIndex(new[] { "Convenio" }, "pai_convenio");

                    b.HasIndex(new[] { "Profissional" }, "profissional");

                    b.ToTable("Proc_Amb_Itens", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProcAmbMestre", b =>
                {
                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<DateTime>("DtMovim")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_MOVIM");

                    b.Property<int?>("FlInteira")
                        .HasColumnType("int")
                        .HasColumnName("fl_inteira");

                    b.Property<int?>("FlSit")
                        .HasColumnType("int")
                        .HasColumnName("fl_sit");

                    b.Property<DateTime?>("HrFim")
                        .HasColumnType("datetime")
                        .HasColumnName("hr_fim");

                    b.Property<DateTime?>("HrInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("hr_inicio");

                    b.Property<decimal>("Procedimento")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("PROCEDIMENTO");

                    b.Property<float>("Prontuario")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("PRONTUARIO");

                    b.Property<decimal>("Qtd")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("QTD");

                    b.Property<decimal?>("QtdItens")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("QTD_ITENS");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<float?>("Reducaoacrescimo")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("reducaoacrescimo");

                    b.Property<float>("Registro")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("REGISTRO");

                    b.Property<float?>("RegistroP")
                        .HasColumnType("float(10, 2)");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<string>("Tabela")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TABELA");

                    b.Property<int?>("Tecnica")
                        .HasColumnType("int")
                        .HasColumnName("tecnica");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("TOTAL");

                    b.Property<decimal?>("TotalPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Via")
                        .HasColumnType("int")
                        .HasColumnName("via");

                    b.HasIndex(new[] { "Prontuario", "RegistroP" }, "Proc_Amb_Mestre3")
                        .HasAnnotation("SqlServer:Clustered", true)
                        .HasAnnotation("SqlServer:FillFactor", 90);

                    b.HasIndex(new[] { "DtMovim" }, "dt_movim");

                    b.HasIndex(new[] { "RegistroP" }, "i_registrop_pm");

                    b.HasIndex(new[] { "Procedimento" }, "pam_procedimento");

                    b.HasIndex(new[] { "Prontuario" }, "pam_tabela");

                    b.ToTable("Proc_Amb_Mestre", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProcConvenio", b =>
                {
                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DESCRI");

                    b.Property<string>("Indice")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE");

                    b.Property<string>("Mascara")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("MASCARA");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.ToTable("Proc_Convenios", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Procedimento", b =>
                {
                    b.Property<bool?>("Autorizacao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("autorizacao");

                    b.Property<decimal?>("Auxiliares")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("AUXILIARES");

                    b.Property<decimal?>("Cdesp")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("cdesp");

                    b.Property<int>("CodAmb")
                        .HasColumnType("int")
                        .HasColumnName("cod_amb");

                    b.Property<int?>("CodAmb2")
                        .HasColumnType("int")
                        .HasColumnName("cod_amb2");

                    b.Property<string>("CodExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_EXT");

                    b.Property<string>("CodRelacionado")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cod_relacionado");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("codigo");

                    b.Property<string>("Codigotabelatiss")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigotabelatiss");

                    b.Property<int?>("Codtipoato")
                        .HasColumnType("int")
                        .HasColumnName("codtipoato");

                    b.Property<string>("Descri1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRI1");

                    b.Property<string>("Descri2")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRI2");

                    b.Property<string>("Descri3")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRI3");

                    b.Property<int?>("Dias")
                        .HasColumnType("int")
                        .HasColumnName("dias");

                    b.Property<string>("Exafatu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("exafatu");

                    b.Property<decimal?>("Fatorqtd2")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("fatorqtd2");

                    b.Property<decimal?>("Filme")
                        .HasColumnType("numeric(8,4)")
                        .HasColumnName("FILME");

                    b.Property<string>("FlTextocomp")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fl_textocomp");

                    b.Property<decimal?>("Honorarios")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("HONORARIOS");

                    b.Property<bool>("Inativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("inativo");

                    b.Property<string>("Indice")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE");

                    b.Property<decimal?>("Laudo")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("LAUDO");

                    b.Property<string>("Material")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("material");

                    b.Property<string>("Obc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obc");

                    b.Property<string>("Obs")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obs");

                    b.Property<decimal?>("Operacional")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("OPERACIONAL");

                    b.Property<string>("Preparo")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("preparo");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("numeric(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Sigla")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sigla");

                    b.Property<string>("Sinonimia")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("sinonimia");

                    b.Property<string>("Tabela")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TABELA");

                    b.Property<bool?>("Urgencia")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("urgencia");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("VALOR$");

                    b.ToView("procedimentos");
                });

            modelBuilder.Entity("MigrationMySql.Server.Procedimentosfulllab", b =>
                {
                    b.Property<bool?>("Autorizacao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("autorizacao");

                    b.Property<decimal?>("Auxiliares")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("AUXILIARES");

                    b.Property<decimal?>("CodAmb")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("COD_AMB");

                    b.Property<int>("CodAmb2")
                        .HasColumnType("int")
                        .HasColumnName("cod_amb2");

                    b.Property<string>("CodExt")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("COD_EXT");

                    b.Property<string>("Descri1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRI1");

                    b.Property<string>("Descri2")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRI2");

                    b.Property<string>("Descri3")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRI3");

                    b.Property<int?>("Dias")
                        .HasColumnType("int")
                        .HasColumnName("dias");

                    b.Property<string>("Exafatu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("exafatu");

                    b.Property<decimal?>("Filme")
                        .HasColumnType("numeric(8,4)")
                        .HasColumnName("FILME");

                    b.Property<decimal?>("Honorarios")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("HONORARIOS");

                    b.Property<string>("Indice")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE");

                    b.Property<decimal?>("Laudo")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("LAUDO");

                    b.Property<string>("Material")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("material");

                    b.Property<string>("Obc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obc");

                    b.Property<string>("Obs")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obs");

                    b.Property<decimal?>("Operacional")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("OPERACIONAL");

                    b.Property<string>("Preparo")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("preparo");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("numeric(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Sigla")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("sigla");

                    b.Property<string>("Sinonimia")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("sinonimia");

                    b.Property<string>("Tabela")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA");

                    b.Property<bool?>("Urgencia")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("urgencia");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("VALOR$");

                    b.HasIndex(new[] { "Tabela" }, "PROCEDIMENTOS2")
                        .HasAnnotation("SqlServer:Clustered", true)
                        .HasAnnotation("SqlServer:FillFactor", 90);

                    b.ToTable("procedimentosfulllab", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProcIntIten", b =>
                {
                    b.Property<int?>("Atualiza")
                        .HasColumnType("int");

                    b.Property<decimal?>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<decimal>("Item")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("ITEM");

                    b.Property<int?>("Material")
                        .HasColumnType("int")
                        .HasColumnName("material");

                    b.Property<decimal?>("Percentual")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("PERCENTUAL");

                    b.Property<decimal?>("Profissional")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("PROFISSIONAL");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("REGISTRO");

                    b.Property<decimal>("Tipo")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("TIPO");

                    b.Property<int?>("Via")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("via")
                        .HasDefaultValueSql("(0)");

                    b.Property<decimal?>("VlUnit")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("VL_UNIT");

                    b.ToTable("Proc_Int_Itens", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProcIntMestre", b =>
                {
                    b.Property<int?>("Atualiza")
                        .HasColumnType("int");

                    b.Property<string>("Autori")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("autori");

                    b.Property<string>("Coletador")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("coletador");

                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<DateTime?>("Dataaut")
                        .HasColumnType("datetime")
                        .HasColumnName("dataaut");

                    b.Property<DateTime?>("DtColeta")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_coleta");

                    b.Property<DateTime>("DtMovim")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_MOVIM");

                    b.Property<bool?>("Faltamat")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("faltamat");

                    b.Property<int?>("FlInteira")
                        .HasColumnType("int")
                        .HasColumnName("fl_inteira");

                    b.Property<string>("Guia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("guia");

                    b.Property<DateTime?>("HrColeta")
                        .HasColumnType("datetime")
                        .HasColumnName("hr_coleta");

                    b.Property<int?>("Impetiq")
                        .HasColumnType("int")
                        .HasColumnName("IMPETIQ");

                    b.Property<string>("Lamina")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("lamina");

                    b.Property<decimal>("Procedimento")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("PROCEDIMENTO");

                    b.Property<decimal>("Prontuario")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("PRONTUARIO");

                    b.Property<decimal?>("Qtd")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("QTD");

                    b.Property<decimal?>("QtdItens")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("QTD_ITENS");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("REGISTRO");

                    b.Property<float?>("RegistroP")
                        .HasColumnType("float(10, 2)");

                    b.Property<string>("Registroporigem")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("REGISTROPORIGEM");

                    b.Property<string>("Tabela")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("TOTAL");

                    b.Property<float?>("TotalPago")
                        .HasColumnType("float(10, 2)");

                    b.Property<bool?>("Urgente")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("urgente");

                    b.ToTable("Proc_Int_Mestre", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProdConvenio", b =>
                {
                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DESCRI");

                    b.Property<string>("Mascara")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("MASCARA");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal?>("Revenda")
                        .HasColumnType("decimal(8,4)")
                        .HasColumnName("REVENDA");

                    b.ToTable("Prod_Convenios", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProdExtra", b =>
                {
                    b.Property<string>("CodExt")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("COD_EXT");

                    b.Property<decimal?>("Preco")
                        .HasColumnType("decimal(16,4)")
                        .HasColumnName("PRECO");

                    b.Property<decimal>("Produto")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("PRODUTO");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Tabela")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("TABELA");

                    b.Property<DateTime?>("UltAlt")
                        .HasColumnType("datetime")
                        .HasColumnName("ULT_ALT");

                    b.ToTable("Prod_Extra", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Prodkit", b =>
                {
                    b.Property<string>("Apresentacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("apresentacao");

                    b.Property<float?>("Codigo")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codigo");

                    b.Property<decimal?>("Conversao")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("conversao");

                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descri");

                    b.Property<int?>("Flinativo")
                        .HasColumnType("int")
                        .HasColumnName("flinativo");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("NumTiss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_tiss");

                    b.Property<decimal?>("PrVenda")
                        .HasColumnType("numeric(16,4)")
                        .HasColumnName("pr_venda");

                    b.Property<string>("Qtdpadrao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("qtdpadrao");

                    b.Property<string>("Tabela")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnidCompra")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unid_compra");

                    b.Property<string>("UnidConsumo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unid_consumo");

                    b.ToView("prodkit");
                });

            modelBuilder.Entity("MigrationMySql.Server.ProdkitPresc", b =>
                {
                    b.Property<string>("Apresentacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("apresentacao");

                    b.Property<float?>("Codigo")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codigo");

                    b.Property<decimal?>("Conversao")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("conversao");

                    b.Property<string>("Descri")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descri");

                    b.Property<int?>("Flinativo")
                        .HasColumnType("int")
                        .HasColumnName("flinativo");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("NumTiss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_tiss");

                    b.Property<decimal?>("PrVenda")
                        .HasColumnType("numeric(16,4)")
                        .HasColumnName("pr_venda");

                    b.Property<int?>("Qtdpadrao")
                        .HasColumnType("int")
                        .HasColumnName("qtdpadrao");

                    b.Property<string>("Tabela")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UnidCompra")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unid_compra");

                    b.Property<string>("UnidConsumo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unid_consumo");

                    b.ToView("prodkitPresc");
                });

            modelBuilder.Entity("MigrationMySql.Server.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<bool>("Discontinued")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("QuantityPerUnit")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<short?>("ReorderLevel")
                        .HasColumnType("smallint");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(15,2)");

                    b.Property<short?>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<short?>("UnitsOnOrder")
                        .HasColumnType("smallint");

                    b.HasKey("ProductId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MigrationMySql.Server.Produto", b =>
                {
                    b.Property<int>("Codident")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CODIDENT");

                    b.Property<string>("Apresentacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("APRESENTACAO");

                    b.Property<string>("Brasindice")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("BRASINDICE");

                    b.Property<float?>("CodAmb")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("COD_AMB");

                    b.Property<string>("CodConv")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Codanvisa")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codanvisa");

                    b.Property<string>("Codbarras")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codbarras");

                    b.Property<int?>("Codfabricante")
                        .HasColumnType("int")
                        .HasColumnName("codfabricante");

                    b.Property<float?>("Codigo")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codigo");

                    b.Property<string>("Codigotabelatiss")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("codigotabelatiss");

                    b.Property<int?>("Convant")
                        .HasColumnType("int")
                        .HasColumnName("CONVANT");

                    b.Property<int?>("Convbb")
                        .HasColumnType("int")
                        .HasColumnName("CONVBB");

                    b.Property<decimal?>("Conversao")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("CONVERSAO");

                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRI");

                    b.Property<string>("DescriResumida")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRI_RESUMIDA");

                    b.Property<decimal?>("Divisor")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("DIVISOR");

                    b.Property<string>("Dosagem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("dosagem");

                    b.Property<int?>("Flinativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("flinativo")
                        .HasDefaultValueSql("(0)");

                    b.Property<int?>("Flrepasse")
                        .HasColumnType("int")
                        .HasColumnName("flrepasse");

                    b.Property<int?>("Grupo")
                        .HasColumnType("int")
                        .HasColumnName("grupo");

                    b.Property<int?>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("id_grupo");

                    b.Property<string>("Livre")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("LIVRE");

                    b.Property<string>("Localizacao")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("localizacao");

                    b.Property<decimal>("Matmed")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("MATMED");

                    b.Property<decimal?>("Minimo")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("MINIMO");

                    b.Property<decimal?>("Multiplicador")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("MULTIPLICADOR");

                    b.Property<string>("NumTiss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_tiss");

                    b.Property<decimal?>("PrCusto")
                        .HasColumnType("numeric(14,4)")
                        .HasColumnName("PR_CUSTO");

                    b.Property<decimal?>("PrVenda")
                        .HasColumnType("numeric(16,4)")
                        .HasColumnName("PR_VENDA");

                    b.Property<decimal?>("PrVendaAnt")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("pr_venda_ant");

                    b.Property<int?>("ProdBase")
                        .HasColumnType("int")
                        .HasColumnName("prod_base");

                    b.Property<int?>("ProdRef")
                        .HasColumnType("int")
                        .HasColumnName("prod_ref");

                    b.Property<string>("Qtdpadrao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("QTDPADRAO");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("numeric(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("numeric(8,2)")
                        .HasColumnName("SALDO");

                    b.Property<decimal?>("Saldo0Qtd")
                        .HasColumnType("numeric(8,2)")
                        .HasColumnName("SALDO0_QTD");

                    b.Property<string>("Tabela")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Tipodespesa")
                        .HasColumnType("int")
                        .HasColumnName("tipodespesa");

                    b.Property<string>("UnidCobranca")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unid_cobranca");

                    b.Property<string>("UnidCompra")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UNID_COMPRA");

                    b.Property<string>("UnidConsumo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("UNID_CONSUMO");

                    b.HasKey("Codident");

                    b.HasIndex("IdGrupo");

                    b.HasIndex(new[] { "Codident" }, "I_prodCodIdent");

                    b.HasIndex(new[] { "Codigo" }, "codprod");

                    b.HasIndex(new[] { "Descri" }, "descprod");

                    b.HasIndex(new[] { "Tabela" }, "tabprod");

                    b.HasIndex(new[] { "Matmed" }, "tipoprod");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("MigrationMySql.Server.ProdutosMovimentacao", b =>
                {
                    b.Property<float>("Idmov")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("idmov");

                    b.Property<int?>("Codigopres")
                        .HasColumnType("int")
                        .HasColumnName("codigopres");

                    b.Property<float?>("Coditempresc")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("coditempresc");

                    b.Property<decimal?>("Codkit")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("codkit");

                    b.Property<int?>("Codproduto")
                        .HasColumnType("int")
                        .HasColumnName("codproduto");

                    b.Property<DateTime?>("Datamov")
                        .HasColumnType("datetime")
                        .HasColumnName("datamov");

                    b.Property<int?>("Flexecutado")
                        .HasColumnType("int")
                        .HasColumnName("flexecutado");

                    b.Property<DateTime?>("Horaaplicacao")
                        .HasColumnType("datetime")
                        .HasColumnName("horaaplicacao");

                    b.Property<string>("Obsmov")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("obsmov");

                    b.Property<decimal?>("Qtdprod")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("qtdprod");

                    b.Property<string>("Tabelaproduto")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tabelaproduto");

                    b.Property<string>("Unidproduto")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unidproduto");

                    b.Property<int?>("Usukitconfi")
                        .HasColumnType("int")
                        .HasColumnName("usukitconfi");

                    b.Property<int?>("Usumov")
                        .HasColumnType("int")
                        .HasColumnName("usumov");

                    b.HasKey("Idmov");

                    b.HasIndex("Codigopres");

                    b.HasIndex(new[] { "Codproduto" }, "i_codproduto_mov");

                    b.ToTable("produtos_movimentacao", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Profissionai", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<decimal?>("Atividades")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("ATIVIDADES");

                    b.Property<string>("Bairro")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cbos")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cbos");

                    b.Property<string>("Cbosantigo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cbosantigo");

                    b.Property<string>("Cep")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CIDADE");

                    b.Property<int?>("ConsultaDia")
                        .HasColumnType("int")
                        .HasColumnName("consulta_dia");

                    b.Property<string>("Cpf")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("CPF");

                    b.Property<string>("DigitoRegProfis")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("digito_reg_profis");

                    b.Property<string>("Endereco")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Especialidade")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("ESPECIALIDADE");

                    b.Property<string>("Estado")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("ESTADO");

                    b.Property<int?>("FlLivrocaixa")
                        .HasColumnType("int")
                        .HasColumnName("fl_livrocaixa");

                    b.Property<int?>("FlSolicitante")
                        .HasColumnType("int")
                        .HasColumnName("fl_solicitante");

                    b.Property<bool?>("FlagMedico")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("flag_medico");

                    b.Property<string>("Grupo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("grupo");

                    b.Property<int?>("IdWeb")
                        .HasColumnType("int")
                        .HasColumnName("id_web");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOME");

                    b.Property<string>("Online")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("ONLINE");

                    b.Property<int?>("ProcDia")
                        .HasColumnType("int")
                        .HasColumnName("proc_dia");

                    b.Property<decimal?>("Producaom")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("PRODUCAOM");

                    b.Property<decimal?>("Producaov")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("PRODUCAOV");

                    b.Property<string>("RegProfis")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("REG_PROFIS");

                    b.Property<decimal?>("Samed")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("SAMED");

                    b.Property<string>("Senha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sigla")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sigla");

                    b.Property<string>("Siglaconselho")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("siglaconselho");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE2");

                    b.Property<string>("Tratamento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tratamento");

                    b.Property<string>("UfConselho")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("UF_conselho")
                        .IsFixedLength();

                    b.Property<decimal?>("VlConsulta")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("VL_CONSULTA");

                    b.HasKey("Codigo");

                    b.HasIndex(new[] { "Codigo" }, "i_codigo_pr");

                    b.ToTable("profissionais", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProfissionaisConvenio", b =>
                {
                    b.Property<decimal>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<decimal>("Medico")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("MEDICO");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("TIPO");

                    b.ToTable("Profissionais_Convenios", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.ProfissionaisExtra", b =>
                {
                    b.Property<string>("Atende")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("ATENDE")
                        .IsFixedLength();

                    b.Property<decimal?>("C01i")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("C01I");

                    b.Property<decimal?>("C01n")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("C01N");

                    b.Property<string>("C01s")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("C01S")
                        .IsFixedLength();

                    b.Property<decimal?>("C02n")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("C02N");

                    b.Property<string>("C02s")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("char(6)")
                        .HasColumnName("C02S")
                        .IsFixedLength();

                    b.Property<decimal?>("C03i")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("C03I");

                    b.Property<decimal?>("C03n")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("C03N");

                    b.Property<decimal?>("Co2i")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("CO2I");

                    b.Property<decimal>("Medico")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("MEDICO");

                    b.Property<decimal?>("Taxaa")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("TAXAA");

                    b.Property<decimal?>("Taxai")
                        .HasColumnType("numeric(6,2)")
                        .HasColumnName("TAXAI");

                    b.Property<string>("Tipoa")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TIPOA")
                        .IsFixedLength();

                    b.Property<string>("Tipoi")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("TIPOI")
                        .IsFixedLength();

                    b.ToTable("profissionais_extra", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Qual", b =>
                {
                    b.Property<string>("CoDigo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("Co'digo")
                        .IsFixedLength();

                    b.Property<string>("CoE29")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("Co?E29")
                        .IsFixedLength();

                    b.Property<string>("Col002")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Col004")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Col005AGGEr")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("Col005?,A?G??????????G?Er")
                        .IsFixedLength();

                    b.Property<string>("Exame")
                        .HasMaxLength(27)
                        .IsUnicode(false)
                        .HasColumnType("char(27)")
                        .IsFixedLength();

                    b.Property<string>("GEr")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("???????G?Er")
                        .IsFixedLength();

                    b.Property<string>("GEr1")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("????G?Er")
                        .IsFixedLength();

                    b.Property<string>("Mne")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName(" Mne")
                        .IsFixedLength();

                    b.Property<string>("RotinaAcuAcido")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName(" Rotina\r\n ACU ACIDO")
                        .IsFixedLength();

                    b.ToTable("Qual", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Receita", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<float?>("Codigonet")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codigonet");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Paciente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("Requisitante")
                        .HasColumnType("int");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<string>("Texto")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)");

                    b.Property<int?>("Unidadeorigem")
                        .HasColumnType("int")
                        .HasColumnName("unidadeorigem");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("MigrationMySql.Server.Recepcao", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Agendaunidade")
                        .HasColumnType("int")
                        .HasColumnName("agendaunidade");

                    b.Property<float?>("Codigonet")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codigonet");

                    b.Property<int?>("Convenio")
                        .HasColumnType("int")
                        .HasColumnName("convenio");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<int?>("Enviousms")
                        .HasColumnType("int")
                        .HasColumnName("enviousms");

                    b.Property<int?>("FlImportado")
                        .HasColumnType("int")
                        .HasColumnName("fl_importado");

                    b.Property<DateTime?>("HrAtend")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HrChega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Hrmarcada")
                        .HasColumnType("datetime")
                        .HasColumnName("hrmarcada");

                    b.Property<int?>("Medico")
                        .HasColumnType("int");

                    b.Property<string>("Obs")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("obs");

                    b.Property<int?>("Paciente")
                        .HasColumnType("int");

                    b.Property<decimal?>("Registrop")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("registrop");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("status")
                        .HasDefaultValueSql("(0)");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.Property<int?>("Unidadeorigem")
                        .HasColumnType("int")
                        .HasColumnName("unidadeorigem");

                    b.HasKey("Codigo")
                        .HasName("PK__Recepcao__06370DAD2B8DA8C7");

                    b.HasIndex(new[] { "Codigo" }, "i_codrecepcao");

                    b.HasIndex(new[] { "Codigonet" }, "i_codrecepcaonet");

                    b.HasIndex(new[] { "Data" }, "i_datarecepcao");

                    b.HasIndex(new[] { "Medico" }, "i_medrecepcao");

                    b.HasIndex(new[] { "Registrop" }, "i_registroprecepcao");

                    b.HasIndex(new[] { "Status" }, "i_statusrecepcao");

                    b.HasIndex(new[] { "Statusnet" }, "i_statusrecepcaonet");

                    b.ToTable("Recepcao", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.RecepcaoInternacao", b =>
                {
                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("altura");

                    b.Property<int?>("Atualiza")
                        .HasColumnType("int");

                    b.Property<string>("Autorizacao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("autorizacao");

                    b.Property<int?>("Carater")
                        .HasColumnType("int")
                        .HasColumnName("carater");

                    b.Property<string>("Cid10")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cid10");

                    b.Property<decimal?>("Codigo")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("codigo");

                    b.Property<int?>("CodigoRepasse")
                        .HasColumnType("int")
                        .HasColumnName("codigo_repasse");

                    b.Property<decimal?>("Conta")
                        .HasColumnType("decimal(22,0)");

                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<decimal>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("Dadosclinicos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dadosclinicos");

                    b.Property<DateTime>("Data0")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA0");

                    b.Property<DateTime?>("Data1")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA1");

                    b.Property<string>("Diariasaut")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("diariasaut");

                    b.Property<string>("Diariassol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("diariassol");

                    b.Property<bool?>("Docinc")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("docinc");

                    b.Property<DateTime?>("DtAut")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_aut");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fatirdu")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fatirdu");

                    b.Property<string>("Fatorrh")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("fatorrh");

                    b.Property<decimal?>("Fatura")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("FATURA");

                    b.Property<string>("Gsang")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("gsang");

                    b.Property<string>("Guia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GUIA");

                    b.Property<DateTime?>("Hora0")
                        .HasColumnType("datetime")
                        .HasColumnName("HORA0");

                    b.Property<DateTime?>("Hora1")
                        .HasColumnType("datetime")
                        .HasColumnName("HORA1");

                    b.Property<string>("Leito")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("LEITO");

                    b.Property<int?>("Localatend")
                        .HasColumnType("int")
                        .HasColumnName("localatend");

                    b.Property<bool?>("Medautor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("medautor");

                    b.Property<string>("Medicamentos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("medicamentos");

                    b.Property<int?>("Medico")
                        .HasColumnType("int")
                        .HasColumnName("medico");

                    b.Property<decimal?>("Minuto0")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("MINUTO0");

                    b.Property<decimal?>("Minuto1")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("MINUTO1");

                    b.Property<int?>("Motivosaida")
                        .HasColumnType("int")
                        .HasColumnName("motivosaida");

                    b.Property<string>("Nota")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nota");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("obs");

                    b.Property<string>("Observacao")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("observacoes");

                    b.Property<string>("Operador0")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("OPERADOR0");

                    b.Property<string>("Operador1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("OPERADOR1");

                    b.Property<decimal?>("Paciente")
                        .HasColumnType("decimal(22,0)")
                        .HasColumnName("PACIENTE");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("peso");

                    b.Property<string>("Posto")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("posto");

                    b.Property<bool?>("Prontos")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("prontos");

                    b.Property<int?>("Regime")
                        .HasColumnType("int")
                        .HasColumnName("regime");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("REGISTRO");

                    b.Property<string>("Senhaonline")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("senhaonline");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("STATUS");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<int?>("TipoAcomodacao")
                        .HasColumnType("int")
                        .HasColumnName("tipo_acomodacao");

                    b.Property<int?>("TipoAtend")
                        .HasColumnType("int")
                        .HasColumnName("Tipo_Atend");

                    b.Property<int?>("Tipointernacao")
                        .HasColumnType("int")
                        .HasColumnName("tipointernacao");

                    b.Property<int?>("Tiposaida")
                        .HasColumnType("int")
                        .HasColumnName("tiposaida");

                    b.Property<decimal?>("UnidInternacao")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("UNID_INTERNACAO");

                    b.Property<string>("Unidade")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("unidade");

                    b.Property<bool?>("Urgente")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("urgente");

                    b.ToView("recepcao_internacao");
                });

            modelBuilder.Entity("MigrationMySql.Server.RecepcaoLab", b =>
                {
                    b.Property<decimal?>("Altura")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("altura");

                    b.Property<int?>("Atualiza")
                        .HasColumnType("int");

                    b.Property<string>("Autorizacao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("autorizacao");

                    b.Property<int?>("Carater")
                        .HasColumnType("int")
                        .HasColumnName("carater");

                    b.Property<string>("Cid10")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cid10");

                    b.Property<decimal?>("Codigo")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("codigo");

                    b.Property<int?>("CodigoRepasse")
                        .HasColumnType("int")
                        .HasColumnName("codigo_repasse");

                    b.Property<decimal?>("Conta")
                        .HasColumnType("decimal(22,0)");

                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<decimal>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<string>("Dadosclinicos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dadosclinicos");

                    b.Property<DateTime>("Data0")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA0");

                    b.Property<DateTime?>("Data1")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA1");

                    b.Property<string>("Diariasaut")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("diariasaut");

                    b.Property<string>("Diariassol")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("diariassol");

                    b.Property<bool?>("Docinc")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("docinc");

                    b.Property<DateTime?>("DtAut")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_aut");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fatirdu")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("fatirdu");

                    b.Property<string>("Fatorrh")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("fatorrh");

                    b.Property<decimal?>("Fatura")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("FATURA");

                    b.Property<string>("Gsang")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("gsang");

                    b.Property<string>("Guia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GUIA");

                    b.Property<DateTime?>("Hora0")
                        .HasColumnType("datetime")
                        .HasColumnName("HORA0");

                    b.Property<DateTime?>("Hora1")
                        .HasColumnType("datetime")
                        .HasColumnName("HORA1");

                    b.Property<string>("Leito")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("LEITO");

                    b.Property<int?>("Localatend")
                        .HasColumnType("int")
                        .HasColumnName("localatend");

                    b.Property<bool?>("Medautor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("medautor");

                    b.Property<string>("Medicamentos")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("medicamentos");

                    b.Property<int?>("Medico")
                        .HasColumnType("int")
                        .HasColumnName("medico");

                    b.Property<decimal?>("Minuto0")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("MINUTO0");

                    b.Property<decimal?>("Minuto1")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("MINUTO1");

                    b.Property<int?>("Motivosaida")
                        .HasColumnType("int")
                        .HasColumnName("motivosaida");

                    b.Property<string>("Nota")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nota");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("obs");

                    b.Property<string>("Observacao")
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("varchar(35)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("observacoes");

                    b.Property<string>("Operador0")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("OPERADOR0");

                    b.Property<string>("Operador1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("OPERADOR1");

                    b.Property<decimal?>("Paciente")
                        .HasColumnType("decimal(22,0)")
                        .HasColumnName("PACIENTE");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("peso");

                    b.Property<string>("Posto")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("posto");

                    b.Property<bool?>("Prontos")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("prontos");

                    b.Property<int?>("Regime")
                        .HasColumnType("int")
                        .HasColumnName("regime");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("REGISTRO");

                    b.Property<string>("Senhaonline")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("senhaonline");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("STATUS");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<int?>("TipoAcomodacao")
                        .HasColumnType("int")
                        .HasColumnName("tipo_acomodacao");

                    b.Property<int?>("TipoAtend")
                        .HasColumnType("int")
                        .HasColumnName("Tipo_Atend");

                    b.Property<int?>("Tipointernacao")
                        .HasColumnType("int")
                        .HasColumnName("tipointernacao");

                    b.Property<int?>("Tiposaida")
                        .HasColumnType("int")
                        .HasColumnName("tiposaida");

                    b.Property<decimal?>("UnidInternacao")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("UNID_INTERNACAO");

                    b.Property<string>("Unidade")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("unidade");

                    b.Property<bool?>("Urgente")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("urgente");

                    b.ToTable("recepcao_lab", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.RecepcaoMestre", b =>
                {
                    b.Property<string>("Autorizacao")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("autorizacao");

                    b.Property<string>("Cid10")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cid10");

                    b.Property<int?>("CodigoRepasse")
                        .HasColumnType("int")
                        .HasColumnName("codigo_repasse");

                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)");

                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<decimal>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CONVENIO");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("DATA");

                    b.Property<DateTime?>("Dataok")
                        .HasColumnType("datetime")
                        .HasColumnName("dataok");

                    b.Property<DateTime?>("DtAut")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_aut");

                    b.Property<decimal?>("Fatura")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("FATURA");

                    b.Property<bool>("FlOnline")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("fl_online");

                    b.Property<string>("Guia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("GUIA");

                    b.Property<string>("Guiaprincipal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("guiaprincipal");

                    b.Property<DateTime?>("HoraAtend")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HoraCheg")
                        .HasColumnType("datetime");

                    b.Property<int?>("Medatend")
                        .HasColumnType("int")
                        .HasColumnName("medatend");

                    b.Property<decimal>("Medico")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("MEDICO");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("obs");

                    b.Property<string>("Obsagenda")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obsagenda");

                    b.Property<string>("Operador")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("OPERADOR");

                    b.Property<decimal>("Paciente")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("PACIENTE");

                    b.Property<string>("PkLegada")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("pk_legada");

                    b.Property<int?>("Prescricao")
                        .HasColumnType("int")
                        .HasColumnName("prescricao");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("REGISTRO");

                    b.Property<int?>("Repasseprod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("repasseprod")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("Repasseserv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("repasseserv")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("STATUS");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<int?>("Tempodoenca")
                        .HasColumnType("int")
                        .HasColumnName("tempodoenca");

                    b.Property<int?>("TipoAtend")
                        .HasColumnType("int")
                        .HasColumnName("Tipo_Atend");

                    b.Property<int?>("TipoFat")
                        .HasColumnType("int")
                        .HasColumnName("tipo_fat");

                    b.Property<int?>("Tipoconsulta")
                        .HasColumnType("int")
                        .HasColumnName("tipoconsulta");

                    b.Property<int?>("Tiposaida")
                        .HasColumnType("int")
                        .HasColumnName("tiposaida");

                    b.Property<string>("Unidadetempo")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("unidadetempo");

                    b.HasIndex(new[] { "Conta" }, "conta");

                    b.HasIndex(new[] { "Convenio" }, "convconta");

                    b.HasIndex(new[] { "Data" }, "dataconta");

                    b.HasIndex(new[] { "Fatura" }, "faturaconta");

                    b.HasIndex(new[] { "Paciente" }, "i_pac_recmestre");

                    b.HasIndex(new[] { "Paciente" }, "pacienteconta");

                    b.HasIndex(new[] { "Registro" }, "registroconta");

                    b.ToTable("Recepcao_Mestre", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.RepasseHonor", b =>
                {
                    b.Property<decimal?>("Cobrado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int?>("Fatura")
                        .HasColumnType("int")
                        .HasColumnName("fatura");

                    b.Property<decimal?>("Glosado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Profissional")
                        .HasColumnType("int")
                        .HasColumnName("profissional");

                    b.Property<decimal?>("Repasse")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int");

                    b.ToTable("Repasse_Honor", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.RequisicaoInterface", b =>
                {
                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<string>("Exame")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("exame");

                    b.Property<DateTime?>("Hora")
                        .HasColumnType("datetime")
                        .HasColumnName("hora");

                    b.Property<int?>("Requisicao")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.ToTable("Requisicao_Interface", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Result", b =>
                {
                    b.Property<string>("Cod00")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cod_00");

                    b.Property<string>("Codgrp")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("codgrp");

                    b.Property<string>("Codigo")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("codigo");

                    b.Property<string>("Codimp")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("codimp");

                    b.Property<string>("Codlst")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("codlst");

                    b.Property<string>("Codset")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("codset");

                    b.Property<string>("Colheita")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("colheita");

                    b.Property<string>("Dd")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("dd");

                    b.Property<string>("Exame")
                        .HasMaxLength(27)
                        .IsUnicode(false)
                        .HasColumnType("varchar(27)")
                        .HasColumnName("exame");

                    b.Property<string>("Exm0")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("exm0");

                    b.Property<string>("Exm1")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("exm1");

                    b.Property<string>("Exm2")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("exm2");

                    b.Property<double?>("Fatmed00")
                        .HasColumnType("double")
                        .HasColumnName("fatmed_00");

                    b.Property<string>("Fltr")
                        .HasMaxLength(45)
                        .IsUnicode(false)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("fltr");

                    b.Property<string>("Gab0")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("gab0");

                    b.Property<string>("Gab1")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("gab1");

                    b.Property<string>("Hst1")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("hst1");

                    b.Property<string>("Hst2")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("hst2");

                    b.Property<string>("Hst3")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("hst3");

                    b.Property<string>("Impexm")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("impexm");

                    b.Property<double?>("Mtfilm00")
                        .HasColumnType("double")
                        .HasColumnName("mtfilm_00");

                    b.Property<string>("Ordetq")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ordetq");

                    b.Property<string>("OrdetqT")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("ordetq_t");

                    b.Property<string>("Ordimp")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("ordimp");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("sexo");

                    b.Property<double?>("Val00")
                        .HasColumnType("double")
                        .HasColumnName("val_00");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("MigrationMySql.Server.Setor", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Setor1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Setor");

                    b.ToTable("Setor", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.SetorExame", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nome");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Sigla")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("sigla");

                    b.ToTable("setor_exame", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Shipper", b =>
                {
                    b.Property<int>("ShipperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShipperID");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.HasKey("ShipperId");

                    b.ToTable("Shippers");
                });

            modelBuilder.Entity("MigrationMySql.Server.Status", b =>
                {
                    b.Property<decimal?>("Codigo")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("descricao");

                    b.Property<string>("Interno")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("interno");

                    b.Property<Guid>("Rowguid")
                        .HasColumnType("char(36)")
                        .HasColumnName("rowguid");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tipo");

                    b.ToTable("STATUS", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Statuscarteira", b =>
                {
                    b.Property<string>("Descstatuscart")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descstatuscart");

                    b.Property<int?>("Idstatuscart")
                        .HasColumnType("int")
                        .HasColumnName("idstatuscart");

                    b.ToTable("statuscarteira", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.StatusFatura", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Status_Fatura", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<string>("Address")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("City")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ContactTitle")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Country")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Fax")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("HomePage")
                        .IsUnicode(false)
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasMaxLength(24)
                        .IsUnicode(false)
                        .HasColumnType("varchar(24)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Region")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("MigrationMySql.Server.TabGolden", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cnpj");

                    b.Property<string>("CodAutor")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cod_autor");

                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("conta");

                    b.Property<string>("Controle")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("controle");

                    b.Property<string>("Natureza")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("natureza");

                    b.Property<int?>("Tipo")
                        .HasColumnType("int")
                        .HasColumnName("tipo");

                    b.Property<string>("Urgencia")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("urgencia");

                    b.ToTable("Tab_Golden", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TabHap", b =>
                {
                    b.Property<string>("Conta")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Senha")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.ToTable("Tab_Hap", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tablac", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .IsFixedLength();

                    b.Property<string>("Col002")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Col004")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("Exame")
                        .HasMaxLength(27)
                        .IsUnicode(false)
                        .HasColumnType("char(27)")
                        .IsFixedLength();

                    b.Property<string>("Honorarios")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<string>("Resto1")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("resto1")
                        .IsFixedLength();

                    b.Property<string>("Resto2")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("resto2")
                        .IsFixedLength();

                    b.Property<string>("Resto3")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("resto3")
                        .IsFixedLength();

                    b.Property<string>("RotinaAcuAcido")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("char(20)")
                        .HasColumnName(" Rotina\r\n ACU ACIDO")
                        .IsFixedLength();

                    b.Property<string>("Sigla")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("char(4)")
                        .HasColumnName("sigla")
                        .IsFixedLength();

                    b.ToTable("tablac", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TabUnimed", b =>
                {
                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("conta");

                    b.Property<decimal?>("Crm")
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("crm");

                    b.Property<string>("Guia")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("guia");

                    b.Property<string>("Matricula")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("matricula");

                    b.Property<string>("Rg")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rg");

                    b.ToTable("Tab_Unimed", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbAnamnese", b =>
                {
                    b.Property<string>("Antfamil")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("antfamil");

                    b.Property<string>("Antpess")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("antpess");

                    b.Property<float>("Codanamnese")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codanamnese");

                    b.Property<float?>("Codpaciente")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codpaciente");

                    b.Property<string>("Conduta")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("conduta");

                    b.Property<string>("Estadiam")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("estadiam");

                    b.Property<string>("Hipotdiag")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("hipotdiag");

                    b.Property<string>("Histatual")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("histatual");

                    b.Property<string>("Identanam")
                        .IsUnicode(false)
                        .HasColumnType("text")
                        .HasColumnName("identanam");

                    b.ToTable("tbAnamnese", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbaplicaPlanTerap", b =>
                {
                    b.Property<decimal?>("AlturaAplica")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Bsaaplica")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("BSAAPlica");

                    b.Property<string>("DescAplicacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("DtAplicacao")
                        .HasColumnType("datetime");

                    b.Property<int?>("FlImportado")
                        .HasColumnType("int")
                        .HasColumnName("fl_importado");

                    b.Property<string>("Hdaaplicacao")
                        .HasMaxLength(4000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("HDAAplicacao");

                    b.Property<float>("IdaplicaPlanTerap")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("IDAplicaPlanTerap");

                    b.Property<float?>("IdplanTerap")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("IDPlanTerap");

                    b.Property<decimal?>("PesoAplica")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SeqAplicacao")
                        .HasColumnType("int");

                    b.Property<string>("Sequencia")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("sequencia");

                    b.ToTable("TBAplicaPlanTerap", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbaplicaPlanTerapIten", b =>
                {
                    b.Property<float?>("Codproduto")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codproduto");

                    b.Property<float?>("IdaplicaPlanTerap")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("IDAplicaPlanTerap");

                    b.Property<float>("IdaplicaPlanTerapItens")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("IDAPlicaPlanTerapItens");

                    b.Property<int?>("Qtddose")
                        .HasColumnType("int")
                        .HasColumnName("qtddose");

                    b.Property<int?>("Qtdplaneja")
                        .HasColumnType("int")
                        .HasColumnName("qtdplaneja");

                    b.Property<int?>("Qtdproduto")
                        .HasColumnType("int")
                        .HasColumnName("qtdproduto");

                    b.Property<string>("UnidadeAplica")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("UnidadeDose")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UnidadePlaneja")
                        .HasColumnType("int");

                    b.Property<int?>("Via")
                        .HasColumnType("int");

                    b.ToTable("TBAplicaPlanTerapItens", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbAtendimento", b =>
                {
                    b.Property<string>("CdPaciente")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("CD_PACIENTE");

                    b.Property<string>("NrAtendimento")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("NR_ATENDIMENTO");

                    b.Property<string>("CdModoEvento")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("CD_MODO_EVENTO")
                        .IsFixedLength();

                    b.Property<string>("CdMotivoSaida")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("CD_MOTIVO_SAIDA")
                        .IsFixedLength();

                    b.Property<string>("CdOperadora")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CD_OPERADORA");

                    b.Property<string>("CdPadraoAcomodacao")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CD_PADRAO_ACOMODACAO");

                    b.Property<string>("CdPlano")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CD_PLANO");

                    b.Property<string>("DsSituacaoClinica")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("DS_SITUACAO_CLINICA");

                    b.Property<DateTime?>("DtFimAtendimento")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_FIM_ATENDIMENTO");

                    b.Property<DateTime?>("DtFinalizado")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_FINALIZADO");

                    b.Property<DateTime>("DtIniAtendimento")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_INI_ATENDIMENTO");

                    b.Property<DateTime?>("DtIniVigenciaContrato")
                        .HasColumnType("datetime")
                        .HasColumnName("DT_INI_VIGENCIA_CONTRATO");

                    b.Property<string>("InAcidente")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("IN_ACIDENTE")
                        .IsFixedLength();

                    b.Property<string>("InCaraterAtendimento")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("IN_CARATER_ATENDIMENTO")
                        .IsFixedLength();

                    b.Property<string>("InCaraterInternado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("IN_CARATER_INTERNADO")
                        .IsFixedLength();

                    b.Property<string>("InCidNotificavel")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("IN_CID_NOTIFICAVEL")
                        .IsFixedLength();

                    b.Property<string>("InFinalizado")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("IN_FINALIZADO")
                        .IsFixedLength();

                    b.Property<string>("InTipoDoenca")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("IN_TIPO_DOENCA")
                        .IsFixedLength();

                    b.Property<string>("InTipoInternacao")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("IN_TIPO_INTERNACAO")
                        .IsFixedLength();

                    b.Property<string>("NrCartaoSaude")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("NR_CARTAO_SAUDE");

                    b.Property<string>("NrCidObito")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NR_CID_OBITO");

                    b.Property<string>("NrContratoOperadora")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("NR_CONTRATO_OPERADORA");

                    b.Property<string>("NrDeclaracaoObito")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NR_DECLARACAO_OBITO");

                    b.Property<string>("NrTempoEvolucaoDoenca")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("NR_TEMPO_EVOLUCAO_DOENCA")
                        .IsFixedLength();

                    b.Property<string>("UnTempoEvolucaoDoenca")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("UN_TEMPO_EVOLUCAO_DOENCA")
                        .IsFixedLength();

                    b.HasKey("CdPaciente", "NrAtendimento")
                        .HasName("PK_ATENDIMENTO");

                    b.ToTable("TB_ATENDIMENTO", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbConsultaProfCon", b =>
                {
                    b.Property<string>("CodExt")
                        .HasMaxLength(20)
                        .HasColumnType("char(20)")
                        .HasColumnName("cod_ext")
                        .IsFixedLength();

                    b.Property<int?>("CodigoProf")
                        .HasColumnType("int")
                        .HasColumnName("codigo_prof");

                    b.Property<decimal?>("Convenio")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("convenio");

                    b.ToTable("tbConsultaProfCon", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbConsultaProfConv", b =>
                {
                    b.Property<string>("CodExt")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("char(40)")
                        .HasColumnName("cod_ext")
                        .IsFixedLength();

                    b.Property<int?>("CodigoProf")
                        .HasColumnType("int")
                        .HasColumnName("codigo_prof");

                    b.Property<decimal?>("Convenio")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("convenio");

                    b.ToTable("tbConsultaProfConv", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbdocspaciente", b =>
                {
                    b.Property<string>("Arqdoc")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("arqdoc");

                    b.Property<int>("Coddoc")
                        .HasColumnType("int")
                        .HasColumnName("coddoc");

                    b.Property<int?>("Codpaciente")
                        .HasColumnType("int")
                        .HasColumnName("codpaciente");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descricao");

                    b.Property<DateTime?>("Dtdoc")
                        .HasColumnType("datetime")
                        .HasColumnName("dtdoc");

                    b.Property<int?>("Tipomodelo")
                        .HasColumnType("int")
                        .HasColumnName("tipomodelo");

                    b.Property<string>("Usuariodoc")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuariodoc");

                    b.ToTable("tbdocspaciente", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbEntSaiProd", b =>
                {
                    b.Property<int>("IdMovimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMovimento");

                    b.Property<decimal?>("Descontos")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("descontos");

                    b.Property<int?>("Destino")
                        .HasColumnType("int")
                        .HasColumnName("destino");

                    b.Property<DateTime?>("DtCompra")
                        .HasColumnType("datetime")
                        .HasColumnName("dtCompra");

                    b.Property<DateTime?>("DtEntrega")
                        .HasColumnType("datetime")
                        .HasColumnName("dtEntrega");

                    b.Property<DateTime?>("DtMovimento")
                        .HasColumnType("datetime")
                        .HasColumnName("dtMovimento");

                    b.Property<DateTime?>("DtVencimento")
                        .HasColumnType("datetime")
                        .HasColumnName("dtVencimento");

                    b.Property<int?>("FlFinalizada")
                        .HasColumnType("int")
                        .HasColumnName("fl_finalizada");

                    b.Property<int?>("IdFornecedor")
                        .HasColumnType("int")
                        .HasColumnName("idFornecedor");

                    b.Property<decimal?>("Impostos")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("impostos");

                    b.Property<string>("NotaFiscal")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("notaFiscal");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("obs");

                    b.Property<int?>("Origem")
                        .HasColumnType("int")
                        .HasColumnName("origem");

                    b.Property<float?>("Paciente")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("paciente");

                    b.Property<int?>("Prescricao")
                        .HasColumnType("int")
                        .HasColumnName("prescricao");

                    b.Property<string>("Temperatura")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("temperatura");

                    b.Property<int?>("TipoMovimento")
                        .HasColumnType("int")
                        .HasColumnName("tipoMovimento");

                    b.Property<int?>("Usumov")
                        .HasColumnType("int")
                        .HasColumnName("usumov");

                    b.Property<decimal?>("ValorFrete")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("valorFrete");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("valorTotal");

                    b.HasKey("IdMovimento");

                    b.HasIndex("Destino");

                    b.HasIndex("IdFornecedor");

                    b.HasIndex("Origem");

                    b.HasIndex("Paciente");

                    b.HasIndex("Prescricao");

                    b.HasIndex(new[] { "DtMovimento" }, "I_EntSaiProd");

                    b.HasIndex(new[] { "TipoMovimento" }, "I_tbEntSaiProd");

                    b.ToTable("tbEntSaiProd", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbEntSaiProdIten", b =>
                {
                    b.Property<int>("IdMovimentoItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMovimentoItem");

                    b.Property<DateTime?>("DtFabricacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dtFabricacao");

                    b.Property<DateTime?>("DtValidade")
                        .HasColumnType("datetime")
                        .HasColumnName("dtValidade");

                    b.Property<int?>("Fabricante")
                        .HasColumnType("int")
                        .HasColumnName("fabricante");

                    b.Property<bool?>("FlExecutado")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("fl_executado");

                    b.Property<int?>("FlagBaixa")
                        .HasColumnType("int")
                        .HasColumnName("flag_baixa");

                    b.Property<int?>("IdMovimento")
                        .HasColumnType("int")
                        .HasColumnName("idMovimento");

                    b.Property<float?>("IdProdMov")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("idProdMov");

                    b.Property<int?>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    b.Property<string>("Lote")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Obs")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("obs");

                    b.Property<decimal?>("PrecoUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("QtdProduto")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("qtdProduto");

                    b.HasKey("IdMovimentoItem");

                    b.HasIndex("Fabricante");

                    b.HasIndex("IdMovimento");

                    b.HasIndex("IdProdMov");

                    b.HasIndex(new[] { "IdProduto" }, "Index_idProduto");

                    b.HasIndex(new[] { "Lote" }, "Index_lote");

                    b.ToTable("tbEntSaiProdItens", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbespecialidade", b =>
                {
                    b.Property<decimal?>("Cdesp")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("CDESP");

                    b.Property<string>("Cdprdcon")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CDPRDCON");

                    b.Property<int>("Cod")
                        .HasColumnType("int")
                        .HasColumnName("COD");

                    b.Property<string>("Descesp")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("DESCESP");

                    b.Property<string>("Nmesp")
                        .HasMaxLength(51)
                        .IsUnicode(false)
                        .HasColumnType("varchar(51)")
                        .HasColumnName("NMESP");

                    b.ToTable("TBESPECIALIDADE", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbEstoqueProduto", b =>
                {
                    b.Property<int>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    b.Property<int>("IdLocal")
                        .HasColumnType("int")
                        .HasColumnName("idLocal");

                    b.Property<string>("Lote")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lote");

                    b.Property<int?>("Qtd")
                        .HasColumnType("int")
                        .HasColumnName("qtd");

                    b.HasKey("IdProduto", "IdLocal", "Lote");

                    b.HasIndex(new[] { "IdLocal" }, "IdxLocal");

                    b.HasIndex(new[] { "Qtd" }, "IdxQtd");

                    b.ToTable("tbEstoqueProdutos", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbFabricante", b =>
                {
                    b.Property<int>("IdFabricante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFabricante");

                    b.Property<string>("DescFabricante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descFabricante");

                    b.HasKey("IdFabricante")
                        .HasName("PK__tbFabric__6E91D599202D7450");

                    b.ToTable("tbFabricante", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbFornecedor", b =>
                {
                    b.Property<int>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idFornecedor");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CNPJ");

                    b.Property<int?>("CodigoTerceiro")
                        .HasColumnType("int")
                        .HasColumnName("codigoTerceiro");

                    b.Property<string>("ContatoFornecedor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("DescFornecedor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EmailFornecedor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelFornecedor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdFornecedor");

                    b.ToTable("tbFornecedor", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbitemprescricao", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<int?>("Codigopres")
                        .HasColumnType("int")
                        .HasColumnName("codigopres");

                    b.Property<int?>("Numgrupo")
                        .HasColumnType("int")
                        .HasColumnName("numgrupo");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("Proddilu")
                        .HasColumnType("int")
                        .HasColumnName("proddilu");

                    b.Property<int?>("Produto")
                        .HasColumnType("int")
                        .HasColumnName("produto");

                    b.Property<decimal?>("Qtd")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qtd");

                    b.Property<decimal?>("Qtddilu")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("qtddilu");

                    b.Property<string>("Unid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unid");

                    b.Property<string>("Uniddilu")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("uniddilu");

                    b.HasIndex(new[] { "Codigo" }, "icoditpres");

                    b.HasIndex(new[] { "Codigopres" }, "iip_itemprescr");

                    b.HasIndex(new[] { "Numgrupo" }, "ipp_numgrupo");

                    b.HasIndex(new[] { "Produto" }, "ipp_prodprescr");

                    b.ToTable("tbitemprescricao", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tblivrocaixa", b =>
                {
                    b.Property<DateTime?>("Dtmov")
                        .HasColumnType("datetime")
                        .HasColumnName("dtmov");

                    b.Property<int?>("FlFechado")
                        .HasColumnType("int")
                        .HasColumnName("fl_fechado");

                    b.Property<string>("Historico")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("historico");

                    b.Property<int?>("Idfornecedor")
                        .HasColumnType("int")
                        .HasColumnName("idfornecedor");

                    b.Property<int>("Idmov")
                        .HasColumnType("int")
                        .HasColumnName("idmov");

                    b.Property<int?>("Tipomov")
                        .HasColumnType("int")
                        .HasColumnName("tipomov");

                    b.Property<decimal?>("Vlmov")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("vlmov");

                    b.ToTable("tblivrocaixa", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbLocalEstoque", b =>
                {
                    b.Property<int>("IdLocalEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLocalEstoque");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("local");

                    b.HasKey("IdLocalEstoque")
                        .HasName("PK_tbLocalEstoque_1");

                    b.ToTable("tbLocalEstoque", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbLog", b =>
                {
                    b.Property<int>("IdLog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLog");

                    b.Property<DateTime>("DataLog")
                        .HasColumnType("datetime")
                        .HasColumnName("dataLog");

                    b.Property<string>("DescricaoLog")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descricaoLog");

                    b.Property<int>("UsuarioLog")
                        .HasColumnType("int")
                        .HasColumnName("usuarioLog");

                    b.HasKey("IdLog");

                    b.HasIndex("UsuarioLog");

                    b.ToTable("tbLog", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbmodelo", b =>
                {
                    b.Property<string>("Arqmodelo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("arqmodelo");

                    b.Property<int>("Codmodelo")
                        .HasColumnType("int")
                        .HasColumnName("codmodelo");

                    b.Property<string>("Conteudomodelo")
                        .HasColumnType("longtext")
                        .HasColumnName("conteudomodelo");

                    b.Property<string>("Descmodelo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descmodelo");

                    b.Property<bool?>("Temp")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("temp");

                    b.ToTable("tbmodelos", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbMotivoSaidaInternacao", b =>
                {
                    b.Property<string>("CdMotivoSaida")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("CD_MOTIVO_SAIDA");

                    b.Property<string>("CdTipoMotivo")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CD_TIPO_MOTIVO");

                    b.Property<string>("NmMotivoSaida")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NM_MOTIVO_SAIDA");

                    b.ToTable("TB_MOTIVO_SAIDA_INTERNACAO", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbplanTerap", b =>
                {
                    b.Property<string>("Cid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cid");

                    b.Property<float?>("Codpaciente")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codpaciente");

                    b.Property<int?>("Codprofissional")
                        .HasColumnType("int")
                        .HasColumnName("codprofissional");

                    b.Property<string>("Convenio")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("convenio");

                    b.Property<string>("DescPlanTerap")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("DtCriaPlan")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<string>("HdaplanTerap")
                        .IsUnicode(false)
                        .HasColumnType("longtext")
                        .HasColumnName("HDAPlanTerap");

                    b.Property<string>("Histclin")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("histclin");

                    b.Property<float>("IdplanTerap")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("IDPlanTerap");

                    b.ToTable("TBPlanTerap", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbPreProdRepasse", b =>
                {
                    b.Property<int>("IdPreprodrepasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_preprodrepasse");

                    b.Property<int>("Codident")
                        .HasColumnType("int")
                        .HasColumnName("codident");

                    b.Property<DateTime?>("DtEntrega")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_entrega");

                    b.Property<string>("NumTiss")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("num_tiss");

                    b.Property<decimal?>("Precounit")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("precounit");

                    b.HasKey("IdPreprodrepasse")
                        .HasName("PK__tbPrePro__4DF504FF85381461");

                    b.HasIndex("Codident");

                    b.HasIndex(new[] { "DtEntrega" }, "i_dt_entrega");

                    b.ToTable("tbPreProdRepasse", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbprocedcomp", b =>
                {
                    b.Property<bool?>("Autorizacao")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("autorizacao");

                    b.Property<decimal?>("Auxiliares")
                        .HasColumnType("numeric(2,0)")
                        .HasColumnName("AUXILIARES");

                    b.Property<decimal?>("Cdesp")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("cdesp");

                    b.Property<int>("CodAmb")
                        .HasColumnType("int")
                        .HasColumnName("cod_amb");

                    b.Property<int?>("CodAmb2")
                        .HasColumnType("int")
                        .HasColumnName("cod_amb2");

                    b.Property<string>("CodExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_EXT");

                    b.Property<string>("CodRelacionado")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cod_relacionado");

                    b.Property<decimal>("Codigo")
                        .HasColumnType("numeric(18,0)")
                        .HasColumnName("codigo");

                    b.Property<string>("Codigotabelatiss")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("codigotabelatiss");

                    b.Property<int?>("Codtipoato")
                        .HasColumnType("int")
                        .HasColumnName("codtipoato");

                    b.Property<string>("Descri1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRI1");

                    b.Property<string>("Descri2")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRI2");

                    b.Property<string>("Descri3")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRI3");

                    b.Property<int?>("Dias")
                        .HasColumnType("int")
                        .HasColumnName("dias");

                    b.Property<string>("Exafatu")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("exafatu");

                    b.Property<decimal?>("Fatorqtd2")
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("fatorqtd2");

                    b.Property<decimal?>("Filme")
                        .HasColumnType("numeric(8,4)")
                        .HasColumnName("FILME");

                    b.Property<string>("FlTextocomp")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fl_textocomp");

                    b.Property<decimal?>("Honorarios")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("HONORARIOS");

                    b.Property<bool>("Inativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("inativo");

                    b.Property<string>("Indice")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("INDICE");

                    b.Property<decimal?>("Laudo")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("LAUDO");

                    b.Property<string>("Material")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("material");

                    b.Property<string>("Obc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obc");

                    b.Property<string>("Obs")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obs");

                    b.Property<decimal?>("Operacional")
                        .HasColumnType("numeric(14,2)")
                        .HasColumnName("OPERACIONAL");

                    b.Property<string>("Preparo")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("preparo");

                    b.Property<decimal?>("Recnum")
                        .HasColumnType("numeric(8,0)")
                        .HasColumnName("RECNUM");

                    b.Property<string>("Sigla")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sigla");

                    b.Property<string>("Sinonimia")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("sinonimia");

                    b.Property<string>("Tabela")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TABELA");

                    b.Property<bool?>("Urgencia")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("urgencia");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("numeric(16,2)")
                        .HasColumnName("VALOR$");

                    b.HasIndex(new[] { "CodAmb" }, "cod_amb");

                    b.HasIndex(new[] { "Descri1" }, "descriproc");

                    b.HasIndex(new[] { "Tabela" }, "tabelaproc");

                    b.ToTable("TBPROCEDCOMP", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbProdutosCobranca", b =>
                {
                    b.Property<int>("IdProdCobranca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProdCobranca");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<int?>("IdMovimentoItem")
                        .HasColumnType("int")
                        .HasColumnName("idMovimentoItem");

                    b.Property<int?>("IdPrescricao")
                        .HasColumnType("int")
                        .HasColumnName("idPrescricao");

                    b.Property<int?>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int?>("Local")
                        .HasColumnType("int")
                        .HasColumnName("local");

                    b.Property<decimal?>("TotalUsado")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("totalUsado");

                    b.HasKey("IdProdCobranca")
                        .HasName("PK__tbProdut__B2BFCBF29A95F65D");

                    b.HasIndex("IdPrescricao");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("tbProdutosCobranca", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbProdutosConvenio", b =>
                {
                    b.Property<int>("ProdutoConvenio")
                        .HasColumnType("int")
                        .HasColumnName("produtoConvenio");

                    b.Property<int>("ProdutoEstoque")
                        .HasColumnType("int")
                        .HasColumnName("produtoEstoque");

                    b.HasIndex("ProdutoConvenio");

                    b.HasIndex("ProdutoEstoque");

                    b.ToTable("tbProdutosConvenios", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbprofcontratado", b =>
                {
                    b.Property<int>("Idcontratado")
                        .HasColumnType("int")
                        .HasColumnName("idcontratado");

                    b.Property<int>("Idprof")
                        .HasColumnType("int")
                        .HasColumnName("idprof");

                    b.ToTable("tbprofcontratado", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbProfConvRepasse", b =>
                {
                    b.Property<int>("IdProfConvRepasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProfConvRepasse");

                    b.Property<int>("Codprof")
                        .HasColumnType("int")
                        .HasColumnName("codprof");

                    b.Property<int>("Convenio")
                        .HasColumnType("int")
                        .HasColumnName("convenio");

                    b.Property<decimal?>("Vlrepasse")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("vlrepasse");

                    b.HasKey("IdProfConvRepasse")
                        .HasName("PK__tbProfCo__6E66719CC976522A");

                    b.ToTable("tbProfConvRepasse", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbprofdium", b =>
                {
                    b.Property<int?>("Codprof")
                        .HasColumnType("int")
                        .HasColumnName("codprof");

                    b.Property<DateTime?>("Dtagenda")
                        .HasColumnType("datetime")
                        .HasColumnName("dtagenda");

                    b.Property<int>("Idprofdia")
                        .HasColumnType("int")
                        .HasColumnName("idprofdia");

                    b.Property<int?>("Intervalo")
                        .HasColumnType("int")
                        .HasColumnName("intervalo");

                    b.Property<string>("Obsprofdia")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("obsprofdia");

                    b.Property<int?>("Sematendimento")
                        .HasColumnType("int")
                        .HasColumnName("sematendimento");

                    b.Property<string>("Usuprofdia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("usuprofdia");

                    b.ToTable("tbprofdia", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbprofrepasse", b =>
                {
                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Medico")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("MEDICO");

                    b.Property<string>("Sigla")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("SIGLA");

                    b.ToTable("tbprofrepasse", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbRepasse", b =>
                {
                    b.Property<int>("CodRepasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_repasse");

                    b.Property<decimal?>("CustoTotal")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("custo_total");

                    b.Property<DateTime?>("DataRepasse")
                        .HasColumnType("datetime")
                        .HasColumnName("data_repasse");

                    b.Property<decimal?>("RepasseTotal")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("repasse_total");

                    b.Property<decimal?>("TotalPago")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("total_pago");

                    b.Property<string>("Usuario")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("usuario");

                    b.HasKey("CodRepasse")
                        .HasName("PK__tbRepass__190EAF4C9C794153");

                    b.ToTable("tbRepasse", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbsemrepasse", b =>
                {
                    b.Property<int>("Idsemrepasse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idsemrepasse");

                    b.Property<string>("Coditem")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("coditem");

                    b.Property<int?>("Codprof")
                        .HasColumnType("int")
                        .HasColumnName("codprof");

                    b.HasKey("Idsemrepasse")
                        .HasName("PK__tbsemrep__A0464FC24BFFE5CB");

                    b.ToTable("tbsemrepasse", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Tbtextocomum", b =>
                {
                    b.Property<int?>("Codprof")
                        .HasColumnType("int")
                        .HasColumnName("codprof");

                    b.Property<float>("Idtexto")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("idtexto");

                    b.Property<float?>("Nrrepcontagem")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("nrrepcontagem");

                    b.Property<float?>("Nrrepet")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("nrrepet");

                    b.Property<string>("Textocomum")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("textocomum");

                    b.HasIndex(new[] { "Idtexto" }, "i_idtexto");

                    b.HasIndex(new[] { "Codprof" }, "i_proftexto");

                    b.HasIndex(new[] { "Textocomum" }, "i_texto");

                    b.ToTable("tbtextocomum", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TbTipoMovimento", b =>
                {
                    b.Property<int>("IdTipoMovimento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoMovimento");

                    b.Property<string>("DescTipoMovimento")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descTipoMovimento");

                    b.HasKey("IdTipoMovimento");

                    b.ToTable("tbTipoMovimento", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TipoAtendimento", b =>
                {
                    b.Property<int?>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Tipo_Atendimento", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TipoAto", b =>
                {
                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Codtiss")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("codtiss");

                    b.Property<string>("Descri")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("DESCRI");

                    b.Property<string>("Fator")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FATOR");

                    b.Property<decimal>("Recnum")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("RECNUM");

                    b.HasIndex(new[] { "Codigo" }, "i_codigo_ta");

                    b.HasIndex(new[] { "Codigo" }, "ta_codigo");

                    b.ToTable("Tipo_Ato", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.TipoSaidum", b =>
                {
                    b.Property<int?>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("DescTipoAtend")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("TipoSaida");
                });

            modelBuilder.Entity("MigrationMySql.Server.Trace", b =>
                {
                    b.Property<string>("ApplicationName")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<float?>("ClientProcessId")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("ClientProcessID");

                    b.Property<float?>("Cpu")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("CPU");

                    b.Property<float?>("Duration")
                        .HasColumnType("float(10, 2)");

                    b.Property<float?>("EventClass")
                        .HasColumnType("float(10, 2)");

                    b.Property<string>("NtuserName")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("NTUserName");

                    b.Property<float?>("Reads")
                        .HasColumnType("float(10, 2)");

                    b.Property<int>("RowNumber")
                        .HasColumnType("int");

                    b.Property<float?>("Spid")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("SPID");

                    b.Property<string>("SqluserName")
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("SQLUserName");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<string>("TextData")
                        .IsUnicode(false)
                        .HasColumnType("longtext");

                    b.Property<float?>("Writes")
                        .HasColumnType("float(10, 2)");

                    b.ToTable("trace", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.Unidade", b =>
                {
                    b.Property<int?>("AlertaProdutos")
                        .HasColumnType("int")
                        .HasColumnName("alertaProdutos");

                    b.Property<string>("BaseFinanceiro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("baseFinanceiro");

                    b.Property<string>("Caminhologo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("caminhologo");

                    b.Property<string>("Caminhomodelos")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("caminhomodelos");

                    b.Property<string>("Caminhoxml")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("caminhoxml");

                    b.Property<string>("Cidade")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Cidpadrao")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cidpadrao");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CNPJ");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int?>("CodigoFinanceiro")
                        .HasColumnType("int")
                        .HasColumnName("codigoFinanceiro");

                    b.Property<DateTime?>("Datanivel")
                        .HasColumnType("datetime")
                        .HasColumnName("datanivel");

                    b.Property<string>("Endereco")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Endnet")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("endnet");

                    b.Property<int?>("FlEnviasms")
                        .HasColumnType("int")
                        .HasColumnName("fl_enviasms");

                    b.Property<string>("HrEnviosms")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("hr_enviosms");

                    b.Property<int?>("IdWeb")
                        .HasColumnType("int")
                        .HasColumnName("id_web");

                    b.Property<int?>("Inicial")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("IP");

                    b.Property<int?>("Local")
                        .HasColumnType("int")
                        .HasColumnName("local");

                    b.Property<string>("Logonet")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("logonet");

                    b.Property<int?>("Nivel")
                        .HasColumnType("int")
                        .HasColumnName("nivel");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Padrao")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("PassFinanceiro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("passFinanceiro");

                    b.Property<string>("RazaoSocial")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ServerFinanceiro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("serverFinanceiro");

                    b.Property<string>("StMsgSms")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("st_msg_sms");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UserFinanceiro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userFinanceiro");

                    b.ToTable("Unidade", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.UnidadesInternacao", b =>
                {
                    b.Property<decimal>("Codigo")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("CODIGO");

                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("DESCRI");

                    b.Property<decimal?>("Setor")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("SETOR");

                    b.ToTable("Unidades_Internacao", (string)null);
                });

            modelBuilder.Entity("MigrationMySql.Server.VwAgendaProf", b =>
                {
                    b.Property<decimal>("Codconv")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("codconv");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<float>("CodigoP")
                        .HasColumnType("float(10, 2)");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("convenio");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<string>("Dtnasc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DTNASC");

                    b.Property<int?>("Enviousms")
                        .HasColumnType("int")
                        .HasColumnName("enviousms");

                    b.Property<DateTime?>("HrAtend")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("HrChega")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Hrmarcada")
                        .HasColumnType("datetime")
                        .HasColumnName("hrmarcada");

                    b.Property<int?>("IdWeb")
                        .HasColumnType("int")
                        .HasColumnName("id_web");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("Nomeprof")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomeprof");

                    b.Property<string>("Obs")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("obs");

                    b.Property<int?>("Paciente")
                        .HasColumnType("int");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SEXO");

                    b.Property<int?>("Statusnet")
                        .HasColumnType("int")
                        .HasColumnName("statusnet");

                    b.Property<string>("Telefone")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("telefone2");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Tipoatend")
                        .HasColumnType("int")
                        .HasColumnName("tipoatend");

                    b.ToView("vw_agenda_prof");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwCabecalhoContum", b =>
                {
                    b.Property<string>("Autorizacao")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("autorizacao");

                    b.Property<decimal>("Codconv")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("codconv");

                    b.Property<float>("Codigop")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("codigop");

                    b.Property<int?>("Codmedsolici")
                        .HasColumnType("int")
                        .HasColumnName("codmedsolici");

                    b.Property<string>("ConsProfSolici")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cons_prof_solici");

                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("conta");

                    b.Property<string>("Cpf")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<DateTime?>("DtAut")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_aut");

                    b.Property<decimal?>("Fatura")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("fatura");

                    b.Property<string>("Guia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("guia");

                    b.Property<string>("Guiaprincipal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("guiaprincipal");

                    b.Property<string>("Matricula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("matricula");

                    b.Property<string>("Medsolici")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("medsolici");

                    b.Property<string>("Nomeconv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomeconv");

                    b.Property<string>("Paciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("paciente");

                    b.Property<string>("RegProfisSolici")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reg_profis_solici");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("registro");

                    b.Property<string>("Sigla")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("sigla");

                    b.Property<string>("Siglamed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("siglamed");

                    b.Property<int?>("TipoAtend")
                        .HasColumnType("int")
                        .HasColumnName("tipo_atend");

                    b.Property<string>("UfConselhoSolici")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("uf_conselho_solici")
                        .IsFixedLength();

                    b.ToView("vw_cabecalho_conta");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwContaProcNaoRealizado", b =>
                {
                    b.Property<decimal>("Paciente")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("paciente");

                    b.Property<float>("Prontuario")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("prontuario");

                    b.ToView("vw_conta_proc_nao_realizado");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwContum", b =>
                {
                    b.Property<string>("Autorizacao")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("autorizacao");

                    b.Property<string>("Cid10")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cid10");

                    b.Property<decimal>("Codconv")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("codconv");

                    b.Property<int?>("Codmedico")
                        .HasColumnType("int")
                        .HasColumnName("codmedico");

                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("conta");

                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("convenio");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<string>("Descatend")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descatend");

                    b.Property<DateTime?>("DtAut")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_aut");

                    b.Property<decimal?>("Fatura")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("fatura");

                    b.Property<string>("Guia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("guia");

                    b.Property<string>("Guiaprincipal")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("guiaprincipal");

                    b.Property<DateTime?>("Horaatend")
                        .HasColumnType("datetime")
                        .HasColumnName("horaatend");

                    b.Property<DateTime?>("Horacheg")
                        .HasColumnType("datetime")
                        .HasColumnName("horacheg");

                    b.Property<string>("Matricula")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("matricula");

                    b.Property<decimal>("Medcobra")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("medcobra");

                    b.Property<string>("Medico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("medico");

                    b.Property<string>("Obs")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("obs");

                    b.Property<string>("Operador")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("operador");

                    b.Property<decimal>("Paciente")
                        .HasColumnType("decimal(8,0)")
                        .HasColumnName("paciente");

                    b.Property<decimal>("Registro")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("registro");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.Property<int?>("TipoAtend")
                        .HasColumnType("int")
                        .HasColumnName("tipo_atend");

                    b.Property<int?>("Tipoconsulta")
                        .HasColumnType("int")
                        .HasColumnName("tipoconsulta");

                    b.Property<int?>("Tiposaida")
                        .HasColumnType("int")
                        .HasColumnName("tiposaida");

                    b.ToView("vw_conta");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwDetalhesContum", b =>
                {
                    b.Property<decimal>("Coditem")
                        .HasColumnType("decimal(10,0)")
                        .HasColumnName("coditem");

                    b.Property<decimal>("Codprof")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("codprof");

                    b.Property<string>("Codtiss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codtiss");

                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("conta");

                    b.Property<decimal?>("Custounitario")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("custounitario");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<string>("Descricao")
                        .HasMaxLength(403)
                        .IsUnicode(false)
                        .HasColumnType("varchar(403)")
                        .HasColumnName("descricao");

                    b.Property<decimal?>("Divisor")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("divisor");

                    b.Property<int?>("Flrepasse")
                        .HasColumnType("int")
                        .HasColumnName("flrepasse");

                    b.Property<int>("Inativo")
                        .HasColumnType("int")
                        .HasColumnName("inativo");

                    b.Property<decimal?>("PrCusto")
                        .HasColumnType("numeric(14,4)")
                        .HasColumnName("pr_custo");

                    b.Property<string>("Profissional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("profissional");

                    b.Property<float?>("Qtd")
                        .HasColumnType("float")
                        .HasColumnName("qtd");

                    b.Property<decimal?>("Qtdutilizada")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("qtdutilizada");

                    b.Property<string>("RegProfis")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reg_profis");

                    b.Property<int>("Registro")
                        .HasColumnType("int")
                        .HasColumnName("registro");

                    b.Property<string>("Siglaconselho")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("siglaconselho");

                    b.Property<decimal>("Tipo")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("tipo");

                    b.Property<double?>("Totalpago")
                        .HasColumnType("double")
                        .HasColumnName("totalpago");

                    b.Property<string>("UfConselho")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("uf_conselho");

                    b.Property<double?>("Vltotal")
                        .HasColumnType("double")
                        .HasColumnName("vltotal");

                    b.Property<float?>("Vlunit")
                        .HasColumnType("float")
                        .HasColumnName("vlunit");

                    b.ToView("vw_detalhes_conta");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwKitIten", b =>
                {
                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricao");

                    b.Property<decimal>("Iditem")
                        .HasColumnType("decimal(12,0)")
                        .HasColumnName("iditem");

                    b.Property<int?>("Kit")
                        .HasColumnType("int");

                    b.Property<decimal>("Matmed")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("matmed");

                    b.Property<string>("Obs")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("obs");

                    b.Property<string>("Obskit")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("obskit");

                    b.Property<int?>("Ordem")
                        .HasColumnType("int")
                        .HasColumnName("ordem");

                    b.Property<int?>("Produto")
                        .HasColumnType("int");

                    b.Property<int?>("Qtd")
                        .HasColumnType("int");

                    b.Property<int?>("Qtddilu")
                        .HasColumnType("int")
                        .HasColumnName("qtddilu");

                    b.Property<string>("Unid")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("unid");

                    b.ToView("vw_kit_itens");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwMatmedContum", b =>
                {
                    b.Property<int>("Codident")
                        .HasColumnType("int")
                        .HasColumnName("codident");

                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("conta");

                    b.Property<decimal?>("Custounitario")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("custounitario");

                    b.Property<string>("Descri")
                        .HasMaxLength(403)
                        .IsUnicode(false)
                        .HasColumnType("varchar(403)")
                        .HasColumnName("descri");

                    b.Property<decimal?>("Divisor")
                        .HasColumnType("numeric(6,0)")
                        .HasColumnName("DIVISOR");

                    b.Property<DateTime>("DtMovim")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_movim");

                    b.Property<int?>("FlInteira")
                        .HasColumnType("int")
                        .HasColumnName("fl_inteira");

                    b.Property<int?>("Flrepasse")
                        .HasColumnType("int")
                        .HasColumnName("flrepasse");

                    b.Property<int?>("Item")
                        .HasColumnType("int")
                        .HasColumnName("item");

                    b.Property<decimal>("Matmed")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("matmed");

                    b.Property<string>("NumTiss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_tiss");

                    b.Property<decimal?>("PrCusto")
                        .HasColumnType("numeric(14,4)")
                        .HasColumnName("pr_custo");

                    b.Property<float?>("PrUnit")
                        .HasColumnType("float")
                        .HasColumnName("pr_unit");

                    b.Property<int>("Produto")
                        .HasColumnType("int")
                        .HasColumnName("produto");

                    b.Property<float?>("Qtd")
                        .HasColumnType("float")
                        .HasColumnName("qtd");

                    b.Property<int?>("Qtdutilizada")
                        .HasColumnType("int")
                        .HasColumnName("qtdutilizada");

                    b.Property<int>("Registro")
                        .HasColumnType("int")
                        .HasColumnName("registro");

                    b.Property<double?>("Total")
                        .HasColumnType("double")
                        .HasColumnName("total");

                    b.Property<double?>("Totalpago")
                        .HasColumnType("double")
                        .HasColumnName("totalpago");

                    b.Property<string>("UnidCompra")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unid_compra");

                    b.Property<string>("UnidConsumo")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("unid_consumo");

                    b.ToView("vw_matmed_conta");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwPrescPaciProf", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("DtexcpresC")
                        .HasColumnType("datetime")
                        .HasColumnName("dtexcpresC");

                    b.Property<string>("Dtnasc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("DTNASC");

                    b.Property<int?>("IdWeb")
                        .HasColumnType("int")
                        .HasColumnName("id_web");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOME");

                    b.Property<string>("NomeProf")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Obs")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("obs");

                    b.Property<int?>("Presfinalizada")
                        .HasColumnType("int")
                        .HasColumnName("presfinalizada");

                    b.Property<string>("Protocolo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("protocolo");

                    b.Property<string>("RegProfis")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("REG_PROFIS");

                    b.Property<string>("Sexo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("SEXO");

                    b.Property<string>("Siglaconselho")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("siglaconselho");

                    b.Property<string>("UfConselho")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("UF_conselho")
                        .IsFixedLength();

                    b.ToView("vw_PrescPaciProf");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwProcAmbMestreIten", b =>
                {
                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<decimal?>("Convenio")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("convenio");

                    b.Property<DateTime>("DtMovim")
                        .HasColumnType("datetime")
                        .HasColumnName("dt_movim");

                    b.Property<int?>("FlInteira")
                        .HasColumnType("int")
                        .HasColumnName("fl_inteira");

                    b.Property<int?>("FlSit")
                        .HasColumnType("int")
                        .HasColumnName("fl_sit");

                    b.Property<DateTime?>("HrFim")
                        .HasColumnType("datetime")
                        .HasColumnName("hr_fim");

                    b.Property<DateTime?>("HrInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("hr_inicio");

                    b.Property<decimal?>("Percentual")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("percentual");

                    b.Property<decimal>("Procedimento")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("procedimento");

                    b.Property<decimal>("Profissional")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("profissional");

                    b.Property<float>("Prontuario")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("prontuario");

                    b.Property<decimal>("Qtd")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("qtd");

                    b.Property<float?>("Reducaoacrescimo")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("reducaoacrescimo");

                    b.Property<float?>("Registrop")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("registrop");

                    b.Property<string>("Tabela")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tabela");

                    b.Property<int?>("Tecnica")
                        .HasColumnType("int")
                        .HasColumnName("tecnica");

                    b.Property<decimal>("Tipo")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("tipo");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("total");

                    b.Property<decimal?>("Totalpago")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalpago");

                    b.Property<int?>("Via")
                        .HasColumnType("int")
                        .HasColumnName("via");

                    b.Property<decimal?>("VlUnit")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("vl_unit");

                    b.ToView("vw_proc_amb_mestre_itens");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwProcContum", b =>
                {
                    b.Property<int>("CodAmb")
                        .HasColumnType("int")
                        .HasColumnName("cod_amb");

                    b.Property<string>("CodExt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("cod_ext");

                    b.Property<int?>("Contratado")
                        .HasColumnType("int")
                        .HasColumnName("contratado");

                    b.Property<string>("Convenio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("convenio");

                    b.Property<decimal?>("Conveniopi")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("conveniopi");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasColumnName("data");

                    b.Property<string>("Descato")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("descato");

                    b.Property<string>("Descri")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descri");

                    b.Property<string>("Descricao")
                        .HasMaxLength(282)
                        .IsUnicode(false)
                        .HasColumnType("varchar(282)")
                        .HasColumnName("descricao");

                    b.Property<string>("Especialidade")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("especialidade");

                    b.Property<int?>("FlSit")
                        .HasColumnType("int")
                        .HasColumnName("fl_sit");

                    b.Property<DateTime?>("HrFim")
                        .HasColumnType("datetime")
                        .HasColumnName("hr_fim");

                    b.Property<DateTime?>("HrInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("hr_inicio");

                    b.Property<bool>("Inativo")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("inativo");

                    b.Property<string>("Medico")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("medico");

                    b.Property<decimal>("Procedimento")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("procedimento");

                    b.Property<decimal>("Profissional")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("profissional");

                    b.Property<float>("Prontuario")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("prontuario");

                    b.Property<decimal>("Qtd")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("qtd");

                    b.Property<string>("RegProfis")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("reg_profis");

                    b.Property<float?>("Registrop")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("registrop");

                    b.Property<float>("Registropi")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("registropi");

                    b.Property<float>("Registropm")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("registropm");

                    b.Property<string>("Siglaconselho")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("siglaconselho");

                    b.Property<string>("Tabela")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("tabela");

                    b.Property<int?>("Tecnica")
                        .HasColumnType("int")
                        .HasColumnName("tecnica");

                    b.Property<decimal>("TipoAto")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("tipo_ato");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("total");

                    b.Property<decimal?>("Totalpago")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("totalpago");

                    b.Property<string>("UfConselho")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .HasColumnName("uf_conselho")
                        .IsFixedLength();

                    b.Property<int?>("Via")
                        .HasColumnType("int")
                        .HasColumnName("via");

                    b.Property<decimal?>("VlUnit")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("vl_unit");

                    b.ToView("vw_proc_conta");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwRepasse", b =>
                {
                    b.Property<decimal>("Codconv")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("codconv");

                    b.Property<int?>("Codexec")
                        .HasColumnType("int")
                        .HasColumnName("codexec");

                    b.Property<int?>("CodigoRepasse")
                        .HasColumnType("int")
                        .HasColumnName("codigo_repasse");

                    b.Property<int?>("Codmedsolici")
                        .HasColumnType("int")
                        .HasColumnName("codmedsolici");

                    b.Property<string>("Codtiss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codtiss");

                    b.Property<float?>("Conta")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("conta");

                    b.Property<decimal?>("Custototal")
                        .HasColumnType("decimal(38,11)")
                        .HasColumnName("custototal");

                    b.Property<decimal?>("Custounitario")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("custounitario");

                    b.Property<DateTime?>("Datapg")
                        .HasColumnType("datetime")
                        .HasColumnName("datapg");

                    b.Property<string>("Descricao")
                        .HasMaxLength(403)
                        .IsUnicode(false)
                        .HasColumnType("varchar(403)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("Dtdeta")
                        .HasColumnType("datetime")
                        .HasColumnName("dtdeta");

                    b.Property<decimal?>("Fatura")
                        .HasColumnType("decimal(6,0)")
                        .HasColumnName("fatura");

                    b.Property<int?>("Flrepasse")
                        .HasColumnType("int")
                        .HasColumnName("flrepasse");

                    b.Property<double?>("LucroBruto")
                        .HasColumnType("double")
                        .HasColumnName("lucro_bruto");

                    b.Property<double?>("LucroLiquido")
                        .HasColumnType("double")
                        .HasColumnName("lucro_liquido");

                    b.Property<string>("Medsolici")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("medsolici");

                    b.Property<string>("Medsolici2")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("medsolici2");

                    b.Property<string>("Mesref")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("mesref");

                    b.Property<string>("Nf")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nf");

                    b.Property<string>("Nomeconv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomeconv");

                    b.Property<string>("Paciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("paciente");

                    b.Property<decimal?>("PrCusto")
                        .HasColumnType("decimal(25,9)")
                        .HasColumnName("pr_custo");

                    b.Property<decimal?>("Precounit")
                        .HasColumnType("decimal(25,9)")
                        .HasColumnName("precounit");

                    b.Property<string>("Profissional")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("profissional");

                    b.Property<float?>("Qtd")
                        .HasColumnType("float")
                        .HasColumnName("qtd");

                    b.Property<decimal?>("Qtdutilizada")
                        .HasColumnType("decimal(12,2)")
                        .HasColumnName("qtdutilizada");

                    b.Property<int>("Registro")
                        .HasColumnType("int")
                        .HasColumnName("registro");

                    b.Property<double?>("Repasse")
                        .HasColumnType("double")
                        .HasColumnName("repasse");

                    b.Property<string>("Siglamed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("siglamed");

                    b.Property<int?>("StatusFatura")
                        .HasColumnType("int")
                        .HasColumnName("status_fatura");

                    b.Property<decimal>("Tipo")
                        .HasColumnType("decimal(4,0)")
                        .HasColumnName("tipo");

                    b.Property<int?>("TipoAtend")
                        .HasColumnType("int")
                        .HasColumnName("tipo_atend");

                    b.Property<double?>("Totalpago")
                        .HasColumnType("double")
                        .HasColumnName("totalpago");

                    b.Property<double?>("Vlglosa")
                        .HasColumnType("double")
                        .HasColumnName("vlglosa");

                    b.Property<double?>("Vltotal")
                        .HasColumnType("double")
                        .HasColumnName("vltotal");

                    b.Property<float?>("Vlunit")
                        .HasColumnType("float")
                        .HasColumnName("vlunit");

                    b.ToView("vw_repasse");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwRepasseInter", b =>
                {
                    b.Property<decimal>("Codconv")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("codconv");

                    b.Property<int?>("CodigoRepasse")
                        .HasColumnType("int")
                        .HasColumnName("codigo_repasse");

                    b.Property<int>("Codmedsolici")
                        .HasColumnType("int")
                        .HasColumnName("codmedsolici");

                    b.Property<string>("Codtiss")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("codtiss");

                    b.Property<decimal?>("Conta")
                        .HasColumnType("decimal(22,0)")
                        .HasColumnName("conta");

                    b.Property<int>("Custototal")
                        .HasColumnType("int")
                        .HasColumnName("custototal");

                    b.Property<int?>("Custounitario")
                        .HasColumnType("int")
                        .HasColumnName("custounitario");

                    b.Property<DateTime?>("Datapg")
                        .HasColumnType("datetime")
                        .HasColumnName("datapg");

                    b.Property<string>("Descricao")
                        .HasMaxLength(280)
                        .IsUnicode(false)
                        .HasColumnType("varchar(280)")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("Dtdeta")
                        .HasColumnType("datetime")
                        .HasColumnName("dtdeta");

                    b.Property<int?>("Fatura")
                        .HasColumnType("int")
                        .HasColumnName("fatura");

                    b.Property<decimal?>("LucroBruto")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("lucro_bruto");

                    b.Property<decimal?>("LucroLiquido")
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("lucro_liquido");

                    b.Property<string>("Medsolici")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("medsolici");

                    b.Property<string>("Mesref")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("mesref");

                    b.Property<string>("Nf")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nf");

                    b.Property<string>("Nomeconv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nomeconv");

                    b.Property<string>("Paciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("paciente");

                    b.Property<int>("PrCusto")
                        .HasColumnType("int")
                        .HasColumnName("pr_custo");

                    b.Property<decimal?>("Precounit")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("precounit");

                    b.Property<string>("Profissional")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("profissional");

                    b.Property<decimal?>("Qtd")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("QTD");

                    b.Property<decimal?>("Qtdutilizada")
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("qtdutilizada");

                    b.Property<int>("Registro")
                        .HasColumnType("int")
                        .HasColumnName("registro");

                    b.Property<decimal?>("Repasse")
                        .HasColumnType("numeric(19,4)")
                        .HasColumnName("repasse");

                    b.Property<string>("Siglamed")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("siglamed");

                    b.Property<decimal>("Tipo")
                        .HasColumnType("decimal(2,0)")
                        .HasColumnName("tipo");

                    b.Property<int?>("TipoAtend")
                        .HasColumnType("int")
                        .HasColumnName("tipo_atend");

                    b.Property<decimal?>("Totalpago")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("totalpago");

                    b.Property<decimal?>("Vlglosa")
                        .HasColumnType("decimal(21,2)")
                        .HasColumnName("vlglosa");

                    b.Property<decimal?>("Vltotal")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("vltotal");

                    b.Property<decimal?>("Vlunit")
                        .HasColumnType("decimal(14,2)")
                        .HasColumnName("vlunit");

                    b.ToView("vw_repasse_inter");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwTotaisProdExec", b =>
                {
                    b.Property<string>("Apresentacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("APRESENTACAO");

                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRI");

                    b.Property<int?>("IdPrescricao")
                        .HasColumnType("int")
                        .HasColumnName("idPrescricao");

                    b.Property<int?>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    b.Property<int?>("Local")
                        .HasColumnType("int")
                        .HasColumnName("local");

                    b.Property<decimal>("Matmed")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("MATMED");

                    b.Property<decimal?>("TotUsado")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("totUsado");

                    b.ToView("vw_TotaisProdExec");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwTotaisProdExecSemLocal", b =>
                {
                    b.Property<string>("Apresentacao")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("APRESENTACAO");

                    b.Property<string>("Descri")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRI");

                    b.Property<int?>("IdPrescricao")
                        .HasColumnType("int")
                        .HasColumnName("idPrescricao");

                    b.Property<int?>("IdProduto")
                        .HasColumnType("int")
                        .HasColumnName("idProduto");

                    b.Property<decimal>("Matmed")
                        .HasColumnType("numeric(4,0)")
                        .HasColumnName("MATMED");

                    b.Property<decimal?>("TotUsado")
                        .HasColumnType("decimal(38,2)")
                        .HasColumnName("totUsado");

                    b.ToView("vw_TotaisProdExecSemLocal");
                });

            modelBuilder.Entity("MigrationMySql.Server.VwUltConvPac", b =>
                {
                    b.Property<int>("Convenio")
                        .HasColumnType("int")
                        .HasColumnName("convenio");

                    b.Property<float>("Paciente")
                        .HasColumnType("float(10, 2)")
                        .HasColumnName("paciente");

                    b.ToView("vw_ult_conv_pac");
                });

            modelBuilder.Entity("MigrationMySql.Server.AjusteEstoqueIten", b =>
                {
                    b.HasOne("MigrationMySql.Server.AjusteEstoque", "AjusteEstoqueCodigoNavigation")
                        .WithMany("AjusteEstoqueItens")
                        .HasForeignKey("AjusteEstoqueCodigo")
                        .HasConstraintName("FK__AjusteEst__Ajust__61E9B6FB");

                    b.Navigation("AjusteEstoqueCodigoNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.AnamneseMastologium", b =>
                {
                    b.HasOne("MigrationMySql.Server.Profissionai", "ProfissionalNavigation")
                        .WithMany("AnamneseMastologia")
                        .HasForeignKey("Profissional")
                        .HasConstraintName("fk_ProfissionaisAnamneseMastologia");

                    b.Navigation("ProfissionalNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.FaturamentoPaga", b =>
                {
                    b.HasOne("MigrationMySql.Server.Faturamento", "CodigoFaturaNavigation")
                        .WithMany("FaturamentoPagas")
                        .HasForeignKey("CodigoFatura")
                        .IsRequired()
                        .HasConstraintName("FK_FaturamentoPaga_Faturamento");

                    b.Navigation("CodigoFaturaNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.Prescricao", b =>
                {
                    b.HasOne("MigrationMySql.Server.Profissionai", "MedicoNavigation")
                        .WithMany("Prescricaos")
                        .HasForeignKey("Medico")
                        .HasConstraintName("FK_prescricao_profissionais");

                    b.HasOne("MigrationMySql.Server.Paciente1", "PacienteNavigation")
                        .WithMany("Prescricaos")
                        .HasForeignKey("Paciente")
                        .HasConstraintName("FK_prescricao_Pacientes");

                    b.HasOne("MigrationMySql.Server.Login", "UsufinalNavigation")
                        .WithMany("Prescricaos")
                        .HasForeignKey("Usufinal")
                        .HasConstraintName("FK_prescricao_Logins");

                    b.Navigation("MedicoNavigation");

                    b.Navigation("PacienteNavigation");

                    b.Navigation("UsufinalNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.Produto", b =>
                {
                    b.HasOne("MigrationMySql.Server.GruposProduto", "IdGrupoNavigation")
                        .WithMany("Produtos")
                        .HasForeignKey("IdGrupo")
                        .HasConstraintName("FK_Produtos_grupos_produtos");

                    b.Navigation("IdGrupoNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.ProdutosMovimentacao", b =>
                {
                    b.HasOne("MigrationMySql.Server.Prescricao", "CodigopresNavigation")
                        .WithMany("ProdutosMovimentacaos")
                        .HasForeignKey("Codigopres")
                        .HasConstraintName("FK_produtos_movimentacao_prescricao");

                    b.HasOne("MigrationMySql.Server.Produto", "CodprodutoNavigation")
                        .WithMany("ProdutosMovimentacaos")
                        .HasForeignKey("Codproduto")
                        .HasConstraintName("FK_ProdMov_Produtos");

                    b.Navigation("CodigopresNavigation");

                    b.Navigation("CodprodutoNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbEntSaiProd", b =>
                {
                    b.HasOne("MigrationMySql.Server.TbLocalEstoque", "DestinoNavigation")
                        .WithMany("TbEntSaiProdDestinoNavigations")
                        .HasForeignKey("Destino");

                    b.HasOne("MigrationMySql.Server.TbFornecedor", "IdFornecedorNavigation")
                        .WithMany("TbEntSaiProds")
                        .HasForeignKey("IdFornecedor")
                        .HasConstraintName("FK_tbEntSaiProd_tbFornecedor");

                    b.HasOne("MigrationMySql.Server.TbLocalEstoque", "OrigemNavigation")
                        .WithMany("TbEntSaiProdOrigemNavigations")
                        .HasForeignKey("Origem");

                    b.HasOne("MigrationMySql.Server.Paciente1", "PacienteNavigation")
                        .WithMany("TbEntSaiProds")
                        .HasForeignKey("Paciente")
                        .HasConstraintName("FK_tbEntSaiProd_Pacientes");

                    b.HasOne("MigrationMySql.Server.Prescricao", "PrescricaoNavigation")
                        .WithMany("TbEntSaiProds")
                        .HasForeignKey("Prescricao")
                        .HasConstraintName("FK_tbEntSaiProd_prescricao");

                    b.HasOne("MigrationMySql.Server.TbTipoMovimento", "TipoMovimentoNavigation")
                        .WithMany("TbEntSaiProds")
                        .HasForeignKey("TipoMovimento")
                        .HasConstraintName("FK_tbEntSaiProd_tbTipoMovimento");

                    b.Navigation("DestinoNavigation");

                    b.Navigation("IdFornecedorNavigation");

                    b.Navigation("OrigemNavigation");

                    b.Navigation("PacienteNavigation");

                    b.Navigation("PrescricaoNavigation");

                    b.Navigation("TipoMovimentoNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbEntSaiProdIten", b =>
                {
                    b.HasOne("MigrationMySql.Server.TbFabricante", "FabricanteNavigation")
                        .WithMany("TbEntSaiProdItens")
                        .HasForeignKey("Fabricante")
                        .HasConstraintName("FK__tbEntSaiP__fabri__692D4C44");

                    b.HasOne("MigrationMySql.Server.TbEntSaiProd", "IdMovimentoNavigation")
                        .WithMany("TbEntSaiProdItens")
                        .HasForeignKey("IdMovimento")
                        .HasConstraintName("FK_tbEntSaiProdItens_tbEntSaiProd");

                    b.HasOne("MigrationMySql.Server.ProdutosMovimentacao", "IdProdMovNavigation")
                        .WithMany("TbEntSaiProdItens")
                        .HasForeignKey("IdProdMov")
                        .HasConstraintName("FK_tbEntSaiProdItens_produtos_movimentacao");

                    b.HasOne("MigrationMySql.Server.Produto", "IdProdutoNavigation")
                        .WithMany("TbEntSaiProdItens")
                        .HasForeignKey("IdProduto")
                        .HasConstraintName("FK_tbEntSaiProdItens_Produtos");

                    b.Navigation("FabricanteNavigation");

                    b.Navigation("IdMovimentoNavigation");

                    b.Navigation("IdProdMovNavigation");

                    b.Navigation("IdProdutoNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbEstoqueProduto", b =>
                {
                    b.HasOne("MigrationMySql.Server.TbLocalEstoque", "IdLocalNavigation")
                        .WithMany("TbEstoqueProdutos")
                        .HasForeignKey("IdLocal")
                        .IsRequired()
                        .HasConstraintName("FK_tbEstoqueProdutos_tbLocalEstoque");

                    b.HasOne("MigrationMySql.Server.Produto", "IdProdutoNavigation")
                        .WithMany("TbEstoqueProdutos")
                        .HasForeignKey("IdProduto")
                        .IsRequired()
                        .HasConstraintName("FK_tbEstoqueProdutos_Produtos");

                    b.Navigation("IdLocalNavigation");

                    b.Navigation("IdProdutoNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbLog", b =>
                {
                    b.HasOne("MigrationMySql.Server.Login", "UsuarioLogNavigation")
                        .WithMany("TbLogs")
                        .HasForeignKey("UsuarioLog")
                        .IsRequired()
                        .HasConstraintName("FK_tbLog_Logins");

                    b.Navigation("UsuarioLogNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbPreProdRepasse", b =>
                {
                    b.HasOne("MigrationMySql.Server.Produto", "CodidentNavigation")
                        .WithMany("TbPreProdRepasses")
                        .HasForeignKey("Codident")
                        .IsRequired()
                        .HasConstraintName("FK_tbPreProdRepasse_produtos");

                    b.Navigation("CodidentNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbProdutosCobranca", b =>
                {
                    b.HasOne("MigrationMySql.Server.Prescricao", "IdPrescricaoNavigation")
                        .WithMany("TbProdutosCobrancas")
                        .HasForeignKey("IdPrescricao")
                        .HasConstraintName("FK__tbProduto__idPre__6C6814F4");

                    b.HasOne("MigrationMySql.Server.Produto", "IdProdutoNavigation")
                        .WithMany("TbProdutosCobrancas")
                        .HasForeignKey("IdProduto")
                        .HasConstraintName("FK__tbProduto__idPro__6D5C392D");

                    b.HasOne("MigrationMySql.Server.Login", "IdUsuarioNavigation")
                        .WithMany("TbProdutosCobrancas")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__tbProduto__idUsu__6E505D66");

                    b.Navigation("IdPrescricaoNavigation");

                    b.Navigation("IdProdutoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbProdutosConvenio", b =>
                {
                    b.HasOne("MigrationMySql.Server.Produto", "ProdutoConvenioNavigation")
                        .WithMany()
                        .HasForeignKey("ProdutoConvenio")
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoConvenio_Produtos");

                    b.HasOne("MigrationMySql.Server.Produto", "ProdutoEstoqueNavigation")
                        .WithMany()
                        .HasForeignKey("ProdutoEstoque")
                        .IsRequired()
                        .HasConstraintName("FK_ProdutoEstoque_Produtos");

                    b.Navigation("ProdutoConvenioNavigation");

                    b.Navigation("ProdutoEstoqueNavigation");
                });

            modelBuilder.Entity("MigrationMySql.Server.AjusteEstoque", b =>
                {
                    b.Navigation("AjusteEstoqueItens");
                });

            modelBuilder.Entity("MigrationMySql.Server.Faturamento", b =>
                {
                    b.Navigation("FaturamentoPagas");
                });

            modelBuilder.Entity("MigrationMySql.Server.GruposProduto", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("MigrationMySql.Server.Login", b =>
                {
                    b.Navigation("Prescricaos");

                    b.Navigation("TbLogs");

                    b.Navigation("TbProdutosCobrancas");
                });

            modelBuilder.Entity("MigrationMySql.Server.Paciente1", b =>
                {
                    b.Navigation("Prescricaos");

                    b.Navigation("TbEntSaiProds");
                });

            modelBuilder.Entity("MigrationMySql.Server.Prescricao", b =>
                {
                    b.Navigation("ProdutosMovimentacaos");

                    b.Navigation("TbEntSaiProds");

                    b.Navigation("TbProdutosCobrancas");
                });

            modelBuilder.Entity("MigrationMySql.Server.Produto", b =>
                {
                    b.Navigation("ProdutosMovimentacaos");

                    b.Navigation("TbEntSaiProdItens");

                    b.Navigation("TbEstoqueProdutos");

                    b.Navigation("TbPreProdRepasses");

                    b.Navigation("TbProdutosCobrancas");
                });

            modelBuilder.Entity("MigrationMySql.Server.ProdutosMovimentacao", b =>
                {
                    b.Navigation("TbEntSaiProdItens");
                });

            modelBuilder.Entity("MigrationMySql.Server.Profissionai", b =>
                {
                    b.Navigation("AnamneseMastologia");

                    b.Navigation("Prescricaos");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbEntSaiProd", b =>
                {
                    b.Navigation("TbEntSaiProdItens");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbFabricante", b =>
                {
                    b.Navigation("TbEntSaiProdItens");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbFornecedor", b =>
                {
                    b.Navigation("TbEntSaiProds");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbLocalEstoque", b =>
                {
                    b.Navigation("TbEntSaiProdDestinoNavigations");

                    b.Navigation("TbEntSaiProdOrigemNavigations");

                    b.Navigation("TbEstoqueProdutos");
                });

            modelBuilder.Entity("MigrationMySql.Server.TbTipoMovimento", b =>
                {
                    b.Navigation("TbEntSaiProds");
                });
#pragma warning restore 612, 618
        }
    }
}
